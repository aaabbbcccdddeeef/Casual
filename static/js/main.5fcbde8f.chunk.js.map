{"version":3,"sources":["features/root/components/Header/Header.js","features/algorithms/components/Algorithm.js","features/algorithms/solutions/bestTrade.js","features/algorithms/solutions/decks.js","features/algorithms/solutions/flatten.js","features/BinaryTree/BinaryTree.js","features/algorithms/Algorithms.js","features/BinaryTree/components/Node/Node.js","features/BinaryTree/components/Editor/Editor.js","features/colors/components/Color.js","features/colors/components/ColorHarmony.js","features/colors/components/ColorCalculator.js","features/colors/Colors.js","features/hijriAge/components/AgeTable.js","features/hijriAge/components/AgeDetail.js","features/hijriAge/HijriAge.js","features/taxes/Taxes.js","features/root/Root.js","App.js","index.js"],"names":["ToolBarFlex","styled","Toolbar","display","justifyContent","Lnk","name","to","toLowerCase","replace","Typography","color","Header","AppBar","position","Algorithm","problem","algorithm","method","testCases","ExpansionPanel","ExpansionPanelSummary","expandIcon","variant","ExpansionPanelDetails","Grid","container","spacing","item","xs","Paper","elevation","rounded","style","padding","whiteSpace","elevantion","toString","map","a","bestTrade","prices","length","maxProfit","buyDay","sellDay","i","j","profit","decks","input","completeDeck","Map","base","forEach","d","set","x","get","values","Array","from","Math","min","_rootNode","flatten","result","isArray","push","Algorithms","Fragment","Container","maxWidth","href","MainContainer","textAlign","borderRadius","KeyContainer","fontSize","ChildrenContainer","justifyItems","LeftNode","width","backgroundColor","RightNode","Node","node","key","nodeKey","left","right","Editor","addNode","useState","inputValue","setInputValue","className","type","value","onChange","event","target","onClick","BinaryTree","rootNode","setRootNode","useEffect","savedRootNode","localStorage","getItem","JSON","parse","keyValue","nodeValue","setItem","stringify","parseInt","cloneDeep","Color","code","url","title","hsl","convert","hex","rgb","saturation","luminance","Card","raised","margin","CardHeader","substr","subheader","CardContent","marign","window","open","ColorHarmony","codeSplit","split","theCode","theName","trim","defaultTriadScheme","ColorScheme","from_hex","scheme","variation","hardAnalogicScheme","defaultTetradScheme","Divider","colors","c","ColorHelper","findClosestColor","ColorCalculator","r","g","b","h","s","l","userColor","setUserColor","hexVal","setHexVal","handleUserColorChange","channel","val","newColor","rgbColorh","rgbColors","rgbColorl","rgbColorHex","justify","cmyk","TextField","label","e","height","Slider","orientation","max","marginTop","ColorName","closestColor","flexDirection","alignItems","Colors","selectedTab","setSelectedTab","Tabs","indicatorColor","textColor","newValue","Tab","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","AgeTable","birthdays","onAdd","onDelete","data","diffTime","abs","Date","birthdate","age","toFixed","hijriAge","hbirthdate","moment","format","hbirthdate15","add","today","icons","columns","field","actions","icon","tooltip","isFreeAction","rowData","options","actionsColumnIndex","useStyles","makeStyles","theme","AgeDetail","onSave","classes","initialValues","validate","errors","onSubmit","setSubmitting","handleChange","touched","handleBlur","handleSubmit","isSubmitting","onBlur","InputLabelProps","shrink","Button","disabled","saveLocalStorage","defaultData","HijriAge","mode","setMode","initialBirthdays","birthdateItem","getDefaultBirthdays","setBirthdays","remaining","filter","newRecord","Taxes","src","Root","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fcbde8f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nconst ToolBarFlex = styled(Toolbar)({\n    display: 'flex',\n    justifyContent: 'space-around'\n});\n\nconst Header = () => {\n    return (\n        <AppBar position='static' color=\"transparent\">\n            <ToolBarFlex>\n                <Link to=\"/\"><Typography>\n                    Home\n                </Typography></Link>\n                <Lnk name=\"Colors\"></Lnk>\n                <Lnk name=\"Hijri Age\"></Lnk>\n                <Lnk name=\"Taxes\"></Lnk>\n                <Lnk name=\"Algorithms\"></Lnk>\n                <Lnk name=\"Binary Tree\"></Lnk>\n            </ToolBarFlex>\n        </AppBar>\n    )\n}\n\nconst Lnk = ({ name }) => {\n    return <Link to={'/' + name.toLowerCase().replace(/ /g, '')}>\n        <Typography color='primary'>{name}</Typography>\n    </Link>\n}\n\nexport default Header;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst Algorithm = ({ name, problem, algorithm, method, testCases }) => {\n\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography color=\"textPrimary\" variant=\"h5\">{name}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} name=\"Problem\">\n                        <Paper elevation={3} rounded={true} style={{ padding: '15px' }}>\n                            <Typography color=\"primary\" variant=\"h6\">Problem</Typography>\n                            <Typography color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {problem}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} name=\"Algorithm\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Algorithm</Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {algorithm}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} name=\"Method\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Method</Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {method.toString()}\n\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} name=\"testcases\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Test Cases</Typography>\n                            {\n                                testCases.map(a => (\n                                    <div>\n                                        {a.toString()}==> { method(a).toString()}\n                                    </div>\n                                ))\n                            }\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n};\n\nexport default Algorithm;","\nconst problem = `Input is an array of Integers which denotes the stock value of company X.\n\nEx : [1,5,6,7,34,10]\n\nIn this case :\n1 is the stock value of company X on Day 0.\n5 is the stock value of company X on Day 1.\n...\n10 is the stock value of a comany X on Day 5.\n\nYou need to find the day where I can buy the stock and day where I can sell the stock to get the max profit :\n\nIn the above case, If I buy the stock at Day 0 (i.e when the value is 1) and sell on Day 4 (when the value is 34). I get the max profit. Profit = 34-1 = 33. So, the output for the above example should be [0,4] (i.e [buy-day, sell-day])\n\nIf there is a test case in which any profit is not possible, Print [0,0] (i.e: you're buying and selling the stock on the same day)\n\nTest Cases :\n[200, 1,5,6,7,34,10]\n[1,5,6,7,34,10,300]\n[10,1,5,6,7,34,10,20]\n[2,200,1,0,10]\n[7,10]\n[1] //Output: [0,0] You buy and sell on the same day because there's only one number.\n\nIf an emty array or null is passed as an input return [-1,-1].`;\n\nconst algorithm = `// loop1 from 0 to end with BuyIndex\n// loop2 from index to end sellIndex\n// declare MaxProfit, BuyDay, SellDay\n// compute profit if greater than MaxProfit, Replace BuyDay,SellDay and overriteMaxProfit`;\n\nfunction method(prices) {\n    if (!prices || prices.length === 0) {\n        return [-1, -1];\n    }\n\n    if (prices.length === 1) {\n        return [0, 0];\n    }\n\n    let maxProfit = 0;\n    let buyDay = 0;\n    let sellDay = 0;\n\n    for (let i = 0; i < prices.length; i++) {\n        for (let j = i + 1; j < prices.length; j++) {\n            const profit = prices[j] - prices[i];\n            if (profit > maxProfit) {\n                maxProfit = profit;\n                buyDay = i;\n                sellDay = j\n            }\n        }\n    }\n\n    return [buyDay, sellDay];\n\n};\n\nconst testCases = [\n    [1, 5, 6, 7, 34, 10],\n    [200, 1, 5, 6, 7, 34, 10],\n    [1, 5, 6, 7, 34, 10, 300],\n    [10, 1, 5, 6, 7, 34, 10, 20],\n    [2, 200, 1, 0, 10],\n    [7, 10],\n    [1]\n\n];\nconst bestTrade = {\n    name: 'Best Trade',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default bestTrade;","\nfunction method(input) {\n    const completeDeck = new Map();\n    const base = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n    base.forEach(d => completeDeck.set(d + 'H', 0));\n    base.forEach(d => completeDeck.set(d + 'S', 0));\n    base.forEach(d => completeDeck.set(d + 'D', 0));\n    base.forEach(d => completeDeck.set(d + 'C', 0));\n\n\n    input.forEach(x => {\n        completeDeck.set(x, completeDeck.get(x) + 1);\n    });\n\n    const values = Array.from(completeDeck.values());\n    return Math.min(...values);\n}\n\n\n\nconst testCases = [\n    [\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", \"TH\"],\n    [\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\"],\n    [\"TD\", \"TC\", \"6H\", \"5H\", \"KC\", \"JH\", \"QC\", \"4S\", \"2S\", \"8H\", \"JD\", \"2H\", \"AC\", \"7D\", \"6C\", \"5D\", \"AD\", \"TS\", \"4D\", \"KH\", \"3H\", \"9H\", \"3S\", \"2D\", \"5S\", \"6S\", \"AH\", \"JS\", \"6D\", \"9S\", \"4C\", \"7C\", \"8S\", \"AS\", \"KD\", \"7S\", \"4H\", \"KS\", \"7H\", \"9D\", \"8D\", \"3D\", \"5C\", \"9C\", \"QH\", \"JC\", \"8C\", \"TH\", \"QS\", \"3C\", \"QD\", \"2C\"],\n    [\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AH\"],\n    [\"QC\", \"6D\", \"KD\", \"QS\", \"7S\", \"5C\", \"QH\", \"3H\", \"AD\", \"9C\", \"7H\", \"QD\", \"QH\", \"2S\", \"AH\", \"KS\", \"5D\", \"QC\", \"AS\", \"2D\", \"6C\", \"8C\", \"7D\", \"8H\", \"9S\", \"4D\", \"6H\", \"JC\", \"3S\", \"4C\", \"3C\", \"7S\", \"KD\", \"4H\", \"5C\", \"7C\", \"AS\", \"3D\", \"7D\", \"2H\", \"8S\", \"2H\", \"8D\", \"9S\", \"3C\", \"5H\", \"KS\", \"8D\", \"9H\", \"TH\", \"2C\", \"JH\", \"6D\", \"KC\", \"TS\", \"6S\", \"TD\", \"4S\", \"8S\", \"5S\", \"8H\", \"TD\", \"9D\", \"4H\", \"6C\", \"7C\", \"AC\", \"JC\", \"JD\", \"TS\", \"KH\", \"2C\", \"QD\", \"JS\", \"QS\", \"KH\", \"8C\", \"3H\", \"2D\", \"2S\", \"3S\", \"5H\", \"4S\", \"9C\", \"4D\", \"6H\", \"JS\", \"TH\", \"9H\", \"TC\", \"7H\", \"JH\", \"TC\", \"6S\", \"AD\", \"AC\", \"JD\", \"4C\", \"5D\", \"9D\", \"KC\", \"3D\"],\n    [\"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\"]\n];\n\n\nconst problem = `You’re given an X decks of N playing cards with few cards missing. The playing cards can be in the form of an array and is shuffled in any order:\n\nEg: [\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", “TH\"]\n\nwhere: ‘H’,’S’,’D’,’C’ is Hearts, Spades, Diamonds and Clubs\n\nand ‘A’,’2’,’3’,’4’,’5’,’6’,’7’,’8’,’9’,’T’,’J’,’Q’,’K’ is Ace, 2,3…. Ten, Jack, Queen, King respectively.\n\nYou need to find out how many complete decks can be made from the cards you’ve given in the input.\n\nTest Cases:\n\ndecksOfCards([\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", \"TH\"]) // Output: 0 (No complete decks in this array)\n\ndecksOfCards([\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\"]) // Output: 2 (2 complete decks in this array)\n\ndecksOfCards([\"TD\", \"TC\", \"6H\", \"5H\", \"KC\", \"JH\", \"QC\", \"4S\", \"2S\", \"8H\", \"JD\", \"2H\", \"AC\", \"7D\", \"6C\", \"5D\", \"AD\", \"TS\", \"4D\", \"KH\", \"3H\", \"9H\", \"3S\", \"2D\", \"5S\", \"6S\", \"AH\", \"JS\", \"6D\", \"9S\", \"4C\", \"7C\", \"8S\", \"AS\", \"KD\", \"7S\", \"4H\", \"KS\", \"7H\", \"9D\", \"8D\", \"3D\", \"5C\", \"9C\", \"QH\", \"JC\", \"8C\", \"TH\", \"QS\", \"3C\", \"QD\", \"2C\"]) // Output: 1\n\ndecksOfCards([\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AH\"]) // Output: 2\n\ndecksOfCards([\"QC\", \"6D\", \"KD\", \"QS\", \"7S\", \"5C\", \"QH\", \"3H\", \"AD\", \"9C\", \"7H\", \"QD\", \"QH\", \"2S\", \"AH\", \"KS\", \"5D\", \"QC\", \"AS\", \"2D\", \"6C\", \"8C\", \"7D\", \"8H\", \"9S\", \"4D\", \"6H\", \"JC\", \"3S\", \"4C\", \"3C\", \"7S\", \"KD\", \"4H\", \"5C\", \"7C\", \"AS\", \"3D\", \"7D\", \"2H\", \"8S\", \"2H\", \"8D\", \"9S\", \"3C\", \"5H\", \"KS\", \"8D\", \"9H\", \"TH\", \"2C\", \"JH\", \"6D\", \"KC\", \"TS\", \"6S\", \"TD\", \"4S\", \"8S\", \"5S\", \"8H\", \"TD\", \"9D\", \"4H\", \"6C\", \"7C\", \"AC\", \"JC\", \"JD\", \"TS\", \"KH\", \"2C\", \"QD\", \"JS\", \"QS\", \"KH\", \"8C\", \"3H\", \"2D\", \"2S\", \"3S\", \"5H\", \"4S\", \"9C\", \"4D\", \"6H\", \"JS\", \"TH\", \"9H\", \"TC\", \"7H\", \"JH\", \"TC\", \"6S\", \"AD\", \"AC\", \"JD\", \"4C\", \"5D\", \"9D\", \"KC\", \"3D\"]) // Output: 1\n\ndecksOfCards([\"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\"]) // Output: 0`\n\nconst algorithm = ``;\n\n\nconst decks = {\n    name: 'Decks',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default decks;\n","\nfunction method(input, result) {\n    input.forEach(x => {\n        if (Array.isArray(x)) {\n            method(x, result);\n        } else {\n            if (!result){\n                result = [];\n            }\n            result.push(x);\n        }\n    });\n    return result;\n}\n\nconst problem = `Flatten this array out : [1,2,[3,4,[5,6],7,[8,9]]]\nOutput should be [1,2,3,4,5,6,7,8,9]\n\nYou can ONLY use arr.push(), arr.concat() as library / array functions. Please don't use any other library or array functions.`\n\nconst algorithm = ``;\n\nconst testCases = [[1,2,[3,4,[5,6],7,[8,9]]]];\nconst flatten = {\n    name: 'Flatten Array',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default flatten;","import React, { useState, useEffect } from 'react';\nimport Node from './components/Node/Node';\nimport { cloneDeep } from 'lodash';\nimport Editor from './components/Editor/Editor';\n\nlet _rootNode;\nconst BinaryTree = () => {\n\n    let [rootNode, setRootNode] = useState({ key: null, left: null, right: null });\n    useEffect(() => {\n        const savedRootNode = localStorage.getItem('rootNode');\n        if (savedRootNode) {\n            setRootNode(JSON.parse(savedRootNode));\n        }\n    }, []);\n\n    const addNode = (node, nodeValue) => {\n\n        // duplicate nodevalue not allowd\n        if (node.key === nodeValue) return;\n\n        if (node.key === null) {\n            node.key = nodeValue;\n            node.left = null;\n            node.right = null;\n            localStorage.setItem('rootNode', JSON.stringify(_rootNode));\n            return setRootNode(_rootNode);\n        }\n        // insert to the right\n        if (parseInt(nodeValue) > parseInt(node.key)) {\n            if (node.right) {\n                // continue searching\n                addNode(node.right, nodeValue);\n            } else {\n                // right node is terminus: initialize right node, next iteration is the last one.\n                node.right = { key: null };\n                addNode(node.right, nodeValue);\n            }\n        } else {\n            if (node.left) {\n                addNode(node.left, nodeValue);\n            } else {\n                node.left = { key: null };\n                addNode(node.left, nodeValue);\n            }\n        }\n    }\n\n    const addNodeHandler = (keyValue) => {\n        _rootNode = cloneDeep(rootNode);\n        addNode(_rootNode, keyValue);\n    }\n\n    return (\n        <React.Fragment>\n            <Editor addNode={addNodeHandler} />\n            <Node node={rootNode} />\n        </React.Fragment>\n    )\n}\n\nexport default BinaryTree;","import React from 'react';\nimport Algorithm from './components/Algorithm';\nimport bestTrade from './solutions/bestTrade';\nimport decks from './solutions/decks';\nimport flatten from './solutions/flatten';\nimport Container from '@material-ui/core/Container';\n\nconst Algorithms = () => {\n\n    return (\n        <React.Fragment>\n            <Container maxWidth='90%'>\n                <a href=\"https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/\">https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/</a>\n                <Algorithm  {...bestTrade} />\n                <Algorithm  {...decks} />\n                <Algorithm  {...flatten} />\n            </Container>\n        </React.Fragment>\n    )\n\n}\n\nexport default Algorithms;","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst MainContainer = styled(Container)({\n    textAlign: 'center',\n    borderRadius: '25%',\n});\n\n\n\nconst KeyContainer = styled(Container)({\n    fontSize: '1em',\n}\n);\n\nconst ChildrenContainer = styled(Container)({\n    display: 'flex',\n    justifyItems: 'center',\n    justifyContent: 'center',\n});\n\nconst LeftNode = styled(Container)({\n    width: '50%',\n    backgroundColor: 'yellow',\n});\n\nconst RightNode = styled(Container)({\n    width: '50%',\n    backgroundColor: 'magenta',\n}\n);\n\n\nconst Node = ({ node }) => {\n    if (!node || !node.key) {\n        return null;\n    }\n\n    const nodeKey = <MainContainer >\n        <KeyContainer>{node.key}</KeyContainer>\n        <ChildrenContainer >\n            <LeftNode >\n                {\n                    node.left && <Node node={node.left} />\n                }\n            </LeftNode>\n            <RightNode >\n                {\n                    node.right && <Node node={node.right} />\n                }\n            </RightNode>\n        </ChildrenContainer>\n    </MainContainer>;\n\n\n    return (\n        <React.Fragment>\n            {nodeKey}\n        </React.Fragment>\n    )\n\n}\n\n\nexport default Node;","import React, { useState } from 'react';\nimport './editor.scss';\n\nconst Editor = ({ addNode }) => {\n\n    const [inputValue, setInputValue] = useState(0);\n\n    const pushNode = () => {\n        // Math.round(Math.random() * 100)\n        addNode(inputValue);\n    }\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"editor-container\">\n                <label>\n                    Value:\n                <input type=\"number\" value={inputValue} onChange={handleInputChange}></input>\n                </label>\n                <button type=\"button\" onClick={pushNode}>Add</button>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Editor;","import { Card, CardContent, CardHeader } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport convert from 'color-convert';\nimport React, { useState } from 'react';\n\nconst Color = ({ name, code, url, title }) => {\n    const hsl = convert.hex.hsl(code);\n    const rgb = convert.hex.rgb(code);\n    const [saturation] = useState(hsl[1]);\n    const [luminance] = useState(90);\n\n    return (\n        <React.Fragment>\n            <Card raised={true} style={{ margin: '10px' }}>\n                <CardHeader title={name + ' ' + code.substr(1)} subheader={`hsl(${hsl}), rgb(${rgb})`} />\n                <CardContent>\n                    <Grid container spacing={3}>\n                        <Grid item xs={4} style={{ backgroundColor: code }}></Grid>\n                        <Grid item xs={4} style={{ backgroundColor: 'hsl(' + hsl[0] + ',50%,50%)' }}>\n                            <div style={{ marign: '0 1rem', color: `hsl(${hsl[0]},${saturation}%,${100 - luminance}%)` }}>{`hsl(${hsl[0]},${saturation},${100 - luminance})=`}{convert.hsl.hex(hsl[0], saturation, 100 - luminance)}</div>\n                            <div style={{ marign: '0 1rem', color: `hsl(${hsl[0]},${saturation}%,${luminance}%)` }}>{`hsl(${hsl[0]},${saturation},${luminance})=`}{convert.hsl.hex(hsl[0], saturation, luminance)}</div>\n                        </Grid>\n                        <Grid item xs={4}>\n                            <div style={{ color: `hsl(${hsl[0]},${saturation}%, 10%)`, backgroundColor: `hsl(${hsl[0]},${saturation}%, 60%)`, padding: '0.5rem' }}>\n                                Luminance 10% text on 60% background\n                                </div>\n                            <div style={{ display: 'flex', justifyContent: 'center', padding: '1.5rem', backgroundColor: `hsl(${hsl[0]},${saturation}%, 95%)` }}>\n                                <span style={{ color: `hsl(${hsl[0]},${saturation}%, 10%)` }} onClick={() => window.open(url)}>\n                                    {title} + ' Luminance 10% text on 95% background'\n                                </span>\n\n                            </div>\n                            <div style={{ color: `hsl(${hsl[0]},${saturation}%, 95%)`, backgroundColor: `hsl(${hsl[0]},${saturation}%,30%)`, padding: '0.5rem' }}>\n                                Luminance 95% text on 30% background\n                            </div>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        </React.Fragment>\n    )\n}\nexport default Color;","import { Card, CardContent, CardHeader, Divider } from \"@material-ui/core\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport convert from \"color-convert\";\nimport ColorScheme from \"color-scheme\";\nimport ColorHelper from \"color-to-name\";\n\nconst ColorHarmony = ({ code }) => {\n  const codeSplit = code.split(\"#\");\n  let theCode = \"\";\n  let theName = \"\";\n  if (codeSplit.length > 1) {\n    theCode = codeSplit[1].trim();\n    theName = codeSplit[0];\n  } else {\n    theCode = codeSplit[0].trim();\n    theName = \"\";\n  }\n\n  const hsl = convert.hex.hsl(theCode);\n  const rgb = convert.hex.rgb(theCode);\n\n  const defaultTriadScheme = new ColorScheme();\n  defaultTriadScheme.from_hex(theCode).scheme(\"triad\").variation(\"default\");\n\n  const hardAnalogicScheme = new ColorScheme();\n  hardAnalogicScheme.from_hex(theCode).scheme(\"analogic\").variation(\"default\");\n\n  const defaultTetradScheme = new ColorScheme();\n  defaultTetradScheme\n    .from_hex(theCode)\n    .scheme(\"tetrade\")\n    .variation(\"default\");\n\n  return (\n    <React.Fragment>\n      <Card raised={true} style={{ margin: \"10px\" }}>\n        <CardHeader title={theCode} subheader={` hsl(${hsl}), rgb(${rgb})`} />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item style={{ backgroundColor: \"#\" + theCode }}>\n              {theName + \" #\" + theCode}\n            </Grid>\n            <Grid item xs={12}>\n                Triad\n              <Divider />\n            </Grid>\n            {defaultTriadScheme.colors().map((c) => (\n              <Grid item style={{ backgroundColor: \"#\" + c }}>\n                <div>{c}</div>\n                <div>{`hsl(${convert.hex.hsl(c)})`}</div>\n                <div>{`rgb(${convert.hex.rgb(c)})`}</div>\n                <div>{`${ColorHelper.findClosestColor(\"#\" + c).name}`}</div>\n              </Grid>\n            ))}\n            <Grid item xs={12}>\n                Analogic \n              <Divider />\n            </Grid>\n            {hardAnalogicScheme.colors().map((c) => (\n              <Grid item style={{ backgroundColor: \"#\" + c }}>\n                <div>{c}</div>\n                <div>{`hsl(${convert.hex.hsl(c)})`}</div>\n                <div>{`rgb(${convert.hex.rgb(c)})`}</div>\n                <div>{`${ColorHelper.findClosestColor(\"#\" + c).name}`}</div>\n              </Grid>\n            ))}\n            <Grid item xs={12}>\n                Tetrade\n              <Divider />\n            </Grid>\n            {defaultTetradScheme.colors().map((c) => (\n              <Grid item style={{ backgroundColor: \"#\" + c }}>\n                <div>{c}</div>\n                <div>{`hsl(${convert.hex.hsl(c)})`}</div>\n                <div>{`rgb(${convert.hex.rgb(c)})`}</div>\n                <div>{`${ColorHelper.findClosestColor(\"#\" + c).name}`}</div>\n              </Grid>\n            ))}\n          </Grid>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n};\nexport default ColorHarmony;\n","import { Grid, Slider, TextField } from \"@material-ui/core\";\nimport convert from \"color-convert\";\nimport ColorHelper from \"color-to-name\";\nimport React, { useState } from \"react\";\nimport ColorHarmony from \"./ColorHarmony\";\n\nconst ColorCalculator = () => {\n  const [userColor, setUserColor] = useState({\n    r: 0,\n    g: 0,\n    b: 0,\n    h: 0,\n    s: 0,\n    l: 0,\n    hex: \"000000\",\n  });\n\n  const [hexVal, setHexVal] = useState(\"000000\");\n\n  const handleUserColorChange = (channel, val) => {\n    const newColor = {\n      r: userColor.r,\n      g: userColor.g,\n      b: userColor.b,\n      h: userColor.h,\n      s: userColor.s,\n      l: userColor.l,\n    };\n\n    switch (channel) {\n      case \"r\":\n        newColor.r = val;\n        break;\n      case \"g\":\n        newColor.g = val;\n        break;\n      case \"b\":\n        newColor.b = val;\n        break;\n      case \"h\":\n        const rgbColorh = convert.hsl.rgb(val, newColor.s, newColor.l);\n        newColor.r = rgbColorh[0];\n        newColor.g = rgbColorh[1];\n        newColor.b = rgbColorh[2];\n        break;\n      case \"s\":\n        const rgbColors = convert.hsl.rgb(newColor.h, val, newColor.l);\n        newColor.r = rgbColors[0];\n        newColor.g = rgbColors[1];\n        newColor.b = rgbColors[2];\n        break;\n      case \"l\":\n        const rgbColorl = convert.hsl.rgb(newColor.h, newColor.s, val);\n        newColor.r = rgbColorl[0];\n        newColor.g = rgbColorl[1];\n        newColor.b = rgbColorl[2];\n        break;\n      case \"hex\":\n        if (val.length !== 6) {\n          return;\n        }\n        setHexVal(val);\n        const rgbColorHex = convert.hex.rgb(val);\n        newColor.r = rgbColorHex[0];\n        newColor.g = rgbColorHex[1];\n        newColor.b = rgbColorHex[2];\n        break;\n      default:\n        break;\n    }\n    const hsl = convert.rgb.hsl(newColor.r, newColor.g, newColor.b);\n    const hex = convert.rgb.hex(newColor.r, newColor.g, newColor.b);\n    newColor.h = hsl[0];\n    newColor.s = hsl[1];\n    newColor.l = hsl[2];\n    newColor.hex = hex;\n    setHexVal(hex);\n    setUserColor(newColor);\n  };\n  return (\n    <Grid container spacing={2} justify=\"center\" style={{ padding: \"1rem\" }}>\n      <Grid item xs={3}>\n        <div\n          style={{ textAlign: \"center\" }}\n        >{`hsl(${userColor.h},${userColor.s},${userColor.l})`}</div>\n        <div>\n          {`cymk(${convert.hsl.cmyk(userColor.h, userColor.s, userColor.l)})`}\n        </div>\n      </Grid>\n\n      <Grid\n        item\n        xs={3}\n        style={{\n          backgroundColor: `rgb(${userColor.r},${userColor.g},${userColor.b})`,\n        }}\n      ></Grid>\n\n      <Grid item xs={3}>\n        <div\n          style={{ textAlign: \"center\" }}\n        >{`rgb(${userColor.r},${userColor.g},${userColor.b})`}</div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <TextField\n            value={hexVal}\n            label=\"Hex #\"\n            onChange={(e) => handleUserColorChange(\"hex\", e.target.value)}\n          />\n        </div>\n      </Grid>\n      <Grid\n        container\n        style={{ height: \"200px\", padding: \"1rem\" }}\n        justify=\"center\"\n        spacing={2}\n      >\n        <Grid item xs={4}>\n          <Grid container style={{ height: \"300px\", padding: \"1rem\" }}>\n            <Grid item>\n              H\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.h}\n                max={360}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"h\", val)}\n              />\n            </Grid>\n            <Grid item>\n              S\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.s}\n                max={100}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"s\", val)}\n              />\n            </Grid>\n            <Grid item>\n              L\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.l}\n                max={100}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"l\", val)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}>\n          <ColorName hex={userColor.hex} />\n        </Grid>\n        <Grid item xs={4}>\n          <Grid container style={{ height: \"300px\", padding: \"1rem\" }}>\n            <Grid item>\n              R\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.r}\n                max={255}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"r\", val)}\n              />\n            </Grid>\n            <Grid item>\n              G\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.g}\n                max={255}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"g\", val)}\n              />\n            </Grid>\n            <Grid item>\n              B\n              <Slider\n                orientation=\"vertical\"\n                value={userColor.b}\n                max={255}\n                min={0}\n                onChange={(e, val) => handleUserColorChange(\"b\", val)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12} style={{ marginTop: \"9rem\" }}>\n        <ColorHarmony code={hexVal} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ColorCalculator;\n\nconst ColorName = ({ hex }) => {\n  const closestColor = ColorHelper.findClosestColor(\"#\" + hex);\n\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <div>\n        {closestColor.color.toLowerCase() === \"#\" + hex.toLowerCase() &&\n          \"Exact color\"}\n      </div>\n      <div>\n        {closestColor.color.toLowerCase() !== \"#\" + hex.toLowerCase() &&\n          \"Closest color\"}\n      </div>\n      <div\n        style={{\n          height: \"50px\",\n          width: \"40%\",\n          backgroundColor: closestColor.color,\n        }}\n      ></div>\n      <div>\n        <div>{closestColor.color}</div>\n        {`cymk(${convert.hex.cmyk(closestColor.color)})`}\n      </div>\n      <div style={{ fontSize: \"1.5rem\" }}>{closestColor.name}</div>\n    </div>\n  );\n};\n","import React, { useState } from 'react'\nimport Color from './components/Color'\nimport ColorCalculator from './components/ColorCalculator'\nimport ColorHarmony from './components/ColorHarmony';\nimport { Tab, Tabs } from '@material-ui/core';\nconst Colors = () => {\n    const [selectedTab, setSelectedTab] = useState(0);\n    const handleChange = (event, newValue) => {\n        setSelectedTab(newValue);\n    }\n    return (\n        <React.Fragment>\n            <Tabs\n                value={selectedTab}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n            >\n                <Tab label=\"Favorite\" >\n\n                </Tab>\n                <Tab label=\"Calculator\" />\n            </Tabs>\n\n            {selectedTab === 0 &&\n                <div >\n                    <div>\n                        <a href='%PUBLIC_URL%/material.html'>Material color names</a>\n                        <div>Red</div>\n                        <ColorHarmony code='Persian Red: #D32F2F' />\n                        <ColorHarmony code='Red Orange: #F44336' />\n                        <ColorHarmony code='Pink :#FFCDD2' />\n                        <p>Blue</p>\n                        <ColorHarmony code='Denim: #1976D2' />\n                        <ColorHarmony code='Pacific Blue: #0288D1' />\n                        <ColorHarmony code='Dodger: #2196F3' />\n                        <ColorHarmony code='Deep Skye Blue: #03A9F4' />\n                        <ColorHarmony code='Columbia Blue: #BBDEFB' />\n                        <div>Cyan</div>\n                        <ColorHarmony code='Eastern Blue: #0097A7' />\n                        <ColorHarmony code='Dark Turquoise: #00BCD4' />\n                        <ColorHarmony code='Pale Turquoise: #B2EBF2' />\n                        <p>Teal</p>\n                        <ColorHarmony code='Pine Green: #00796B' />\n                        <ColorHarmony code='Dark Cyan: #009688' />\n                        <ColorHarmony code='Cruise: #B2DFDB' />\n                        <p>Green</p>\n                        <ColorHarmony code='Sushi: #689F38   ' />\n                        <ColorHarmony code='Japanese Laurel: #388E3C' />\n                        <ColorHarmony code='Earls Green: #AFB42B' />\n                        <ColorHarmony code='Mantis: #8BC34A  ' />\n                        <ColorHarmony code='Fruit Salad: #4CAF50' />\n                        <ColorHarmony code='Las Palmos: #CDDC39' />\n                        <ColorHarmony code='Snowy Mint: #DCEDC8' />\n                        <ColorHarmony code='Granny Apple: #C8E6C9' />\n                        <ColorHarmony code='Mimosa: #F0F4C3' />\n                        <p>Yellow</p>\n                        <ColorHarmony code='Sunglow : #FBC02D' />\n                        <ColorHarmony code='Gorse: #FFEB3B' />\n                        <ColorHarmony code='Lemon Chiffon: #FFF9C4' />\n                        <p>Orange</p>\n                        <ColorHarmony code='Tangerine: #F57C00' />\n                        <ColorHarmony code='Cinnabar: #E64A19' />\n                        <ColorHarmony code='Orange Peel: #FF9800' />\n                        <ColorHarmony code='Outrageous Orange: #FF5722' />\n                        <ColorHarmony code='Moccasin: #FFE0B2' />\n                        <ColorHarmony code='Your Pink: #FFCCBC' />\n                        <p>Brown</p>\n                        <ColorHarmony code='Very Dark Brown: #5D4037' />\n                        <ColorHarmony code='Tobacco Brown: #795548' />\n                        <ColorHarmony code='Swiss Coffee: #D7CCC8' />\n                        <p>Gray</p>\n                        <ColorHarmony code='Dim Gray: #616161' />\n                        <ColorHarmony code='Dark Gray: #9E9E9E' />\n                        <ColorHarmony code='White Smoke: #F5F5F5' />\n                        <p>BlueGray</p>\n                        <ColorHarmony code='San Juan: #455A64' />\n                        <ColorHarmony code='Hoki: #607D8B' />\n                        <ColorHarmony code='Link Water: #CFD8DC' />\n                    </div>\n                    <Color name='Free speech blue - material primary' code='#3F51B5'></Color>\n                    <Color name='Razzmatazz - material secondary' code='#F50057' url=\"https://material-ui.com/customization/default-theme/#default-theme\" title=\"Default theme\"></Color>\n                    <Color name='Lime' code='#05FF01' url=\"https://visme.co/blog/color-combinations\" title=\"Some beautiful colors\"></Color>\n                    <Color name='Olive' code='#818000' url=\"https://web.njit.edu/~walsh/index.php\" title=\"New Jersy Institute\"></Color>\n                    <Color name='Skyblue' code='#86CEEB' url=\"http://hajonsoft.com/html/colors.html\" title=\"HajOnSoft\"></Color>\n                    <Color name='Navy' code='#000080' url=\"https://www.color-blindness.com/color-name-hue\" title=\"Color name\"></Color>\n                    <Color name='Snow' code='#FFFAFA' url=\"https://websitesetup.org/website-color-schemes/\" title=\"Industries\"></Color>\n                    <Color name='Chocolate' code='#D2691F' url=\"https://material.io/design/color/the-color-system.html#color-usage-and-palettes\" title=\"Material.io\"></Color>\n                    <Color name='Firebrick' code='#B22122' url=\"https://webflow.com/blog/web-design-101-color-theory\" title=\"Web design color theory\"></Color>\n                    <Color name='Tan' code='#D2B48C' url=\"https://material.io/resources/color/#!/?view.left=0&view.right=0\" title=\"Material color tool\"></Color>\n                    <Color name='Silver' code='#C0C0C0' url=\"https://material.io/inline-tools/color/\" title=\"Material inline color viewer\"></Color>\n                    <Color name='Teal' code='#028080' url=\"https://www.tailorbrands.com/blog/logo-color-combinations\" title=\"Logo harmony\"></Color>\n                </div>\n            }\n            {selectedTab === 1 &&\n                <div  >\n                    <ColorCalculator />\n                </div>\n            }\n\n        </React.Fragment>\n    )\n}\n\nexport default Colors;\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport moment from 'moment-hijri';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst AgeTable = ({ birthdays, onAdd, onDelete }) => {\n\n    if (!birthdays) birthdays = [];\n    const columns = [\n        { title: 'Name', field: 'name' },\n        { title: 'Birth date', field: 'birthdate', type: 'date' },\n        { title: 'Hijri Birth ', field: 'hbirthdate', type: 'date' },\n        { title: 'Age', field: 'age', type: 'numeric' },\n        { title: 'Hijri Age', field: 'hijriAge', type: 'numeric' },\n        { title: 'age 15h on', field: 'hbirthdate15', type: 'date' },\n    ];\n\n    const data = birthdays.map(r => {\n\n        const diffTime = Math.abs(new Date() - new Date(r.birthdate));\n        const age = (diffTime / (1000 * 60 * 60 * 24 * 365)).toFixed(2);\n\n        const hijriAge = (diffTime / (1000 * 60 * 60 * 24 * 354)).toFixed(2);\n        const hbirthdate = moment(r.birthdate).format('iDD, iMMM iYYYY');\n        const hbirthdate15 = moment(r.birthdate).add(15, 'iYear').format('DD MMM YYYY');\n        const tableRow = { name: r.name, birthdate: r.birthdate, age, hijriAge, hbirthdate, hbirthdate15 };\n        return tableRow;\n    });\n\n\n    const today = moment().format('iDD, iMMM iYYYY');\n\n    return (\n        <MaterialTable icons={tableIcons}\n            title={`How old are you today ${moment().format('DD MMM YYYY')} / ${today}`}\n            columns={columns}\n            data={data}\n            actions={[\n                {\n                    icon: tableIcons.Add,\n                    tooltip: 'Add Birth',\n                    isFreeAction: true,\n                    onClick: (event) => {\n                        onAdd();\n                    }\n                },\n                {\n                    icon: tableIcons.Delete,\n                    tooltip: 'Delete Birth',\n                    onClick: (event, rowData) => {\n                        onDelete(rowData);\n                    }\n                }\n            ]}\n            options={{\n                actionsColumnIndex: -1\n            }}\n        />\n    )\n}\n\nexport default AgeTable;","import { makeStyles } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport { ErrorMessage, Formik } from 'formik';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: '25px auto',\n        padding: '1em',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n}));\n\nconst AgeDetail = ({ onSave }) => {\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{ name: '', birthdate: '' }}\n                validate={(values) => {\n                    let errors = {};\n\n                    if (!values.name)\n                        errors.name = 'Name is required';\n                    if (values.name && values.name.length < 2)\n                        errors.name = 'Name should be more than 2 characters long';\n\n                    if (!values.birthdate)\n                        errors.birthdate = 'Birthdate is required';\n\n\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    onSave(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Paper elevation={5}>\n                            <form onSubmit={handleSubmit} className={classes.container}>\n                                <TextField name=\"name\" label=\"Name\" onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.name} />\n                                <ErrorMessage name=\"name\" />\n                                <TextField\n                                    label=\"Birthday\"\n                                    name=\"birthdate\"\n                                    type=\"date\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.birthdate}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                                <ErrorMessage name=\"birthdate\" />\n                                <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"primary\">\n                                    Add Birth\n                                </Button>\n                            </form>\n                        </Paper>\n                    )}\n\n            </Formik>\n\n        </React.Fragment>\n    )\n}\n\nexport default AgeDetail;","import React, { useState } from 'react';\nimport AgeTable from './components/AgeTable';\nimport AgeDetail from './components/AgeDetail';\nimport moment from 'moment-hijri';\n\n\nconst HijriAge = () => {\n\n    const [mode, setMode] = useState(0);\n    const initialBirthdays = getDefaultBirthdays();\n    const [birthdays, setBirthdays] = useState(initialBirthdays);\n\n    const handleOnSave = (newRecord) => {\n\n        setBirthdays([...birthdays, { name: newRecord.name, birthdate: moment(newRecord.birthdate).format('DD MMM YYYY') }]);\n        saveLocalStorage(birthdays);\n        setMode(0);\n    }\n    const handleOnAdd = () => {\n        setMode(1);\n    }\n    const handleOnDelete = (rowData) => {\n        const remaining = birthdays.filter(r => r.name !== rowData.name);\n        setBirthdays(remaining);\n        saveLocalStorage(remaining);\n    }\n    return (\n        <React.Fragment>\n            {\n                mode === 0 ? <AgeTable birthdays={birthdays} onAdd={handleOnAdd} onDelete={handleOnDelete} /> : <AgeDetail onSave={handleOnSave} />\n            }\n\n        </React.Fragment>\n    )\n}\n\nfunction saveLocalStorage(birthdays) {\n    if (birthdays && birthdays.length > 0) {\n        localStorage.setItem('birthdays', JSON.stringify(birthdays));\n    } else {\n        localStorage.setItem('birthdays', null);\n    }\n}\n\nfunction getDefaultBirthdays() {\n    const birthdateItem = localStorage.getItem('birthdays');\n    let data;\n    if (birthdateItem) {\n        data = JSON.parse(birthdateItem);\n    }\n    if (!data || data.length === 0) {\n        data = defaultData;\n    }\n    return data;\n}\n\nconst defaultData = [\n    { name: 'Modi', birthdate: '24 Nov 2003' },\n    { name: 'Minna', birthdate: '09 Sep 2006' },\n    { name: 'Noha', birthdate: '02 Mar 2008' },\n    { name: 'Berry', birthdate: '17 Feb 2017' },\n    { name: 'Hamza', birthdate: '12 Aug 2019' },\n    { name: 'Cherry', birthdate: '12 Aug 2019' },\n];\n\nexport default HijriAge;","import React from 'react'\n\nconst Taxes = ()=> {\n\n    return (\n        <iframe style={{width: '100%', height: '100vh'}} title=\"tax calculator\"\n        src=\"https://www.calculator.net/tax-calculator.html?cfilestatus=MarriedJoint&callowance=4&callowanceold=0&ctaxyear=2020&csalaryincome=100000&cwithheld=0&csalarystate=0&csalarylocal=0&chasbusiness=no&cbusinessincome=0&cestimatedtax=0&cmedicarewage=0&csalaryincome2=0&cwithheld2=0&csalarystate2=0&csalarylocal2=0&chasbusiness2=no&cbusinessincome2=0&cestimatedtax2=0&cmedicarewage2=0&cinterestincome=0&cordinarydividends=0&cqualifieddividends=0&crentalincome=0&cshortcapitalgain=0&clongcapitalgain=0&cotherincome=0&cstatetaxrate=0&cira=0&csalestax=6000&cmortgage=22000&cdonations=500&cstudentloan=0&cchildcare=0&ctuition=0&ctuition2=0&ctuition3=0&ctuition4=0&cotherdeductable=0&printit=0&x=70&y=29\"></iframe>\n    )\n}\n\nexport default Taxes;\n","import React from 'react';\nimport Header from './components/Header/Header';\nimport  {Route} from 'react-router-dom';\nimport Algorithms from '../algorithms/Algorithms'\nimport BinaryTree from '../BinaryTree/BinaryTree'\nimport Colors from '../colors/Colors';\nimport HijriAge from '../hijriAge/HijriAge';\nimport Taxes from '../taxes/Taxes';\n\nconst Root = ()=> {\n    return (\n        <React.Fragment>\n            <Header />\n            <Route exact path=\"/\" component={null}></Route>\n            <Route exact path=\"/binarytree\" component={BinaryTree}></Route>\n            <Route exact path=\"/algorithms\" component={Algorithms}></Route>\n            <Route exact path=\"/taxes\" component={Taxes}></Route>\n            <Route exact path=\"/colors\" component={Colors}></Route>\n            <Route exact path=\"/hijriage\" component={HijriAge}></Route>\n        </React.Fragment>\n    )\n}\n\nexport default Root;","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Root from './features/root/Root';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Root></Root>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}