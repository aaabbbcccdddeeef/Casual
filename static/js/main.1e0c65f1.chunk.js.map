{"version":3,"sources":["features/root/components/Header/Header.js","features/algorithms/components/Algorithm.js","features/algorithms/solutions/bestTrade.js","features/algorithms/solutions/decks.js","features/algorithms/solutions/flatten.js","features/binaryTree/BinaryTree.js","features/algorithms/Algorithms.js","features/binaryTree/components/Node/Node.js","features/binaryTree/components/Editor/Editor.js","features/colors/components/Color.js","features/colors/Colors.js","features/hijriAge/components/AgeTable.js","features/hijriAge/components/AgeDetail.js","features/hijriAge/HijriAge.js","features/root/Root.js","App.js","index.js"],"names":["ToolBarFlex","styled","Toolbar","display","justifyContent","Lnk","name","to","toLowerCase","replace","Typography","color","Header","AppBar","position","Algorithm","problem","algorithm","method","testCases","ExpansionPanel","ExpansionPanelSummary","expandIcon","variant","ExpansionPanelDetails","Grid","container","spacing","item","xs","Paper","elevation","rounded","style","padding","whiteSpace","elevantion","toString","map","a","bestTrade","prices","length","maxProfit","buyDay","sellDay","i","j","profit","decks","input","completeDeck","Map","base","forEach","d","set","x","get","values","Array","from","Math","min","_rootNode","flatten","result","isArray","push","Algorithms","Fragment","Container","maxWidth","href","MainContainer","textAlign","borderRadius","KeyContainer","fontSize","ChildrenContainer","justifyItems","LeftNode","width","backgroundColor","RightNode","Node","node","key","nodeKey","left","right","Editor","addNode","useState","inputValue","setInputValue","className","type","value","onChange","event","target","onClick","BinaryTree","rootNode","setRootNode","useEffect","savedRootNode","localStorage","getItem","JSON","parse","keyValue","nodeValue","setItem","stringify","parseInt","cloneDeep","Color","code","complementaryColor","hex","h","s","rgb","match","RegExp","l","join","r","split","g","b","max","hue2rgb","p","q","t","round","substring","hexComplimentary","toUpperCase","Card","CardHeader","title","substr","subheader","CardContent","Colors","flexDirection","rel","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","AgeTable","birthdays","onAdd","onDelete","data","diffTime","abs","Date","birthdate","age","toFixed","hijriAge","hbirthdate","moment","format","hbirthdate15","add","today","icons","columns","field","actions","icon","tooltip","isFreeAction","rowData","options","actionsColumnIndex","useStyles","makeStyles","theme","margin","alignItems","AgeDetail","onSave","classes","initialValues","validate","errors","onSubmit","setSubmitting","handleChange","touched","handleBlur","handleSubmit","isSubmitting","TextField","label","onBlur","InputLabelProps","shrink","Button","disabled","saveLocalStorage","defaultData","HijriAge","mode","setMode","initialBirthdays","birthdateItem","getDefaultBirthdays","setBirthdays","remaining","filter","newRecord","Root","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAMMA,EAAcC,YAAOC,IAAPD,CAAgB,CAChCE,QAAS,OACTC,eAAgB,iBAoBdC,EAAM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACX,OAAO,kBAAC,IAAD,CAAMC,GAAI,IAAMD,EAAKE,cAAcC,QAAQ,KAAM,KACpD,kBAACC,EAAA,EAAD,CAAYC,MAAM,WAAWL,KAItBM,EAvBA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASH,MAAM,eAC5B,kBAACX,EAAD,KACI,kBAAC,IAAD,CAAMO,GAAG,KAAI,kBAACG,EAAA,EAAD,cAGb,kBAAC,EAAD,CAAKJ,KAAK,gBACV,kBAAC,EAAD,CAAKA,KAAK,eACV,kBAAC,EAAD,CAAKA,KAAK,UACV,kBAAC,EAAD,CAAKA,KAAK,cACV,kBAAC,EAAD,CAAKA,KAAK,c,wECwCXS,EArDG,SAAC,GAAqD,IAAnDT,EAAkD,EAAlDA,KAAMU,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAEnD,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAuBC,WAAY,kBAAC,IAAD,OAC/B,kBAACZ,EAAA,EAAD,CAAYC,MAAM,cAAcY,QAAQ,MAAMjB,IAElD,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIvB,KAAK,WACpB,kBAACwB,EAAA,EAAD,CAAOC,UAAW,EAAGC,SAAS,EAAMC,MAAO,CAAEC,QAAS,SAClD,kBAACxB,EAAA,EAAD,CAAYC,MAAM,UAAUY,QAAQ,MAApC,WACA,kBAACb,EAAA,EAAD,CAAYC,MAAM,gBAAgBsB,MAAO,CAAEE,WAAY,aAClDnB,KAIb,kBAACS,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIvB,KAAK,aACpB,kBAACwB,EAAA,EAAD,CAAOM,WAAY,EAAGH,MAAO,CAAEC,QAAS,SACpC,kBAACxB,EAAA,EAAD,CAAYa,QAAQ,MAApB,aACA,kBAACb,EAAA,EAAD,CAAYa,QAAQ,QAAQZ,MAAM,gBAAgBsB,MAAO,CAAEE,WAAY,aAClElB,KAKb,kBAACQ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIvB,KAAK,UACpB,kBAACwB,EAAA,EAAD,CAAOM,WAAY,EAAGH,MAAO,CAAEC,QAAS,SACpC,kBAACxB,EAAA,EAAD,CAAYa,QAAQ,MAApB,UACA,kBAACb,EAAA,EAAD,CAAYa,QAAQ,QAAQZ,MAAM,gBAAgBsB,MAAO,CAAEE,WAAY,aAClEjB,EAAOmB,cAKpB,kBAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIvB,KAAK,aACpB,kBAACwB,EAAA,EAAD,CAAOM,WAAY,EAAGH,MAAO,CAAEC,QAAS,SACpC,kBAACxB,EAAA,EAAD,CAAYa,QAAQ,MAApB,cAEIJ,EAAUmB,KAAI,SAAAC,GAAC,OACX,6BACKA,EAAEF,WADP,OACwBnB,EAAOqB,GAAGF,qBCUtE,IAkBeG,EARG,CACdlC,KAAM,aACNU,QAvES,8+BAwETC,UA9CW,+MA+CXC,OA1CJ,SAAgBuB,GACZ,IAAKA,GAA4B,IAAlBA,EAAOC,OAClB,MAAO,EAAE,GAAI,GAGjB,GAAsB,IAAlBD,EAAOC,OACP,MAAO,CAAC,EAAG,GAOf,IAJA,IAAIC,EAAY,EACZC,EAAS,EACTC,EAAU,EAELC,EAAI,EAAGA,EAAIL,EAAOC,OAAQI,IAC/B,IAAK,IAAIC,EAAID,EAAI,EAAGC,EAAIN,EAAOC,OAAQK,IAAK,CACxC,IAAMC,EAASP,EAAOM,GAAKN,EAAOK,GAC9BE,EAASL,IACTA,EAAYK,EACZJ,EAASE,EACTD,EAAUE,GAKtB,MAAO,CAACH,EAAQC,IAmBhB1B,UAfc,CACd,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACjB,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,IACtB,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,KACrB,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IACzB,CAAC,EAAG,IAAK,EAAG,EAAG,IACf,CAAC,EAAG,IACJ,CAAC,K,SC/CL,IA6Ce8B,EARD,CACV3C,KAAM,QACNU,QA7BS,45IA8BTC,UANW,GAOXC,OA5DJ,SAAgBgC,GACZ,IAAMC,EAAe,IAAIC,IACnBC,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1EA,EAAKC,SAAQ,SAAAC,GAAC,OAAIJ,EAAaK,IAAID,EAAI,IAAK,MAC5CF,EAAKC,SAAQ,SAAAC,GAAC,OAAIJ,EAAaK,IAAID,EAAI,IAAK,MAC5CF,EAAKC,SAAQ,SAAAC,GAAC,OAAIJ,EAAaK,IAAID,EAAI,IAAK,MAC5CF,EAAKC,SAAQ,SAAAC,GAAC,OAAIJ,EAAaK,IAAID,EAAI,IAAK,MAG5CL,EAAMI,SAAQ,SAAAG,GACVN,EAAaK,IAAIC,EAAGN,EAAaO,IAAID,GAAK,MAG9C,IAAME,EAASC,MAAMC,KAAKV,EAAaQ,UACvC,OAAOG,KAAKC,IAAL,MAAAD,KAAI,YAAQH,KA+CnBxC,UA1Cc,CACd,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjnmB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/lv6B,ICVI6C,ED0BWC,EARC,CACZ3D,KAAM,gBACNU,QAVS,6NAWTC,UANW,GAOXC,OA1BJ,SAASA,EAAOgC,EAAOgB,GAWnB,OAVAhB,EAAMI,SAAQ,SAAAG,GACNG,MAAMO,QAAQV,GACdvC,EAAOuC,EAAGS,IAELA,IACDA,EAAS,IAEbA,EAAOE,KAAKX,OAGbS,GAgBP/C,UANc,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,O,SEAzBkD,EAfI,WAEf,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAWC,SAAS,OAChB,uBAAGC,KAAK,gFAAR,gFACA,kBAAC,EAAejC,GAChB,kBAAC,EAAeS,GAChB,kBAAC,EAAegB,M,SCV1BS,EAAgBzE,YAAOsE,IAAPtE,CAAkB,CACpC0E,UAAW,SACXC,aAAc,QAKZC,EAAe5E,YAAOsE,IAAPtE,CAAkB,CACnC6E,SAAU,QAIRC,EAAoB9E,YAAOsE,IAAPtE,CAAkB,CACxCE,QAAS,OACT6E,aAAc,SACd5E,eAAgB,WAGd6E,EAAWhF,YAAOsE,IAAPtE,CAAkB,CAC/BiF,MAAO,MACPC,gBAAiB,WAGfC,EAAYnF,YAAOsE,IAAPtE,CAAkB,CAChCiF,MAAO,MACPC,gBAAiB,YAoCNE,EA/BF,SAAPA,EAAQ,GAAc,IAAZC,EAAW,EAAXA,KACZ,IAAKA,IAASA,EAAKC,IACf,OAAO,KAGX,IAAMC,EAAU,kBAACd,EAAD,KACZ,kBAACG,EAAD,KAAeS,EAAKC,KACpB,kBAACR,EAAD,KACI,kBAACE,EAAD,KAEQK,EAAKG,MAAQ,kBAACJ,EAAD,CAAMC,KAAMA,EAAKG,QAGtC,kBAACL,EAAD,KAEQE,EAAKI,OAAS,kBAACL,EAAD,CAAMC,KAAMA,EAAKI,WAO/C,OACI,kBAAC,IAAMpB,SAAP,KACKkB,I,SC9BEG,G,OA1BA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEQC,mBAAS,GAFjB,mBAErBC,EAFqB,KAETC,EAFS,KAa5B,OACI,kBAAC,IAAMzB,SAAP,KACI,yBAAK0B,UAAU,oBACX,wCAEA,2BAAOC,KAAK,SAASC,MAAOJ,EAAYK,SAT1B,SAACC,GACvBL,EAAcK,EAAMC,OAAOH,WAUnB,4BAAQD,KAAK,SAASK,QAhBjB,WAEbV,EAAQE,KAcA,WHsCDS,EAvDI,WAAO,IAAD,EAESV,mBAAS,CAAEN,IAAK,KAAME,KAAM,KAAMC,MAAO,OAFlD,mBAEhBc,EAFgB,KAENC,EAFM,KAGrBC,qBAAU,WACN,IAAMC,EAAgBC,aAAaC,QAAQ,YACvCF,GACAF,EAAYK,KAAKC,MAAMJ,MAE5B,IAuCH,OACI,kBAAC,IAAMrC,SAAP,KACI,kBAAC,EAAD,CAAQsB,QAPO,SAACoB,IAhCR,SAAVpB,EAAWN,EAAM2B,GAGnB,GAAI3B,EAAKC,MAAQ0B,EAEjB,OAAiB,OAAb3B,EAAKC,KACLD,EAAKC,IAAM0B,EACX3B,EAAKG,KAAO,KACZH,EAAKI,MAAQ,KACbkB,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUnD,IACzCyC,EAAYzC,SAGnBoD,SAASH,GAAaG,SAAS9B,EAAKC,MAChCD,EAAKI,QAKLJ,EAAKI,MAAQ,CAAEH,IAAK,OAHpBK,EAAQN,EAAKI,MAAOuB,KAOpB3B,EAAKG,OAGLH,EAAKG,KAAO,CAAEF,IAAK,OAFnBK,EAAQN,EAAKG,KAAMwB,MAU3BrB,CADA5B,EAAYqD,oBAAUb,GACHQ,MAMf,kBAAC,EAAD,CAAM1B,KAAMkB,M,2BIgCTc,MApFD,SAAC,GAAoB,IAAlBhH,EAAiB,EAAjBA,KAAMiH,EAAW,EAAXA,KACbC,EAgBV,SAA0BC,GAEtB,IASIC,EAAGC,EATHC,EAAM,QAAUH,EAAMA,EAAIhH,QAAQ,IAAK,KAAKoH,MAAM,IAAIC,OAAO,MAAQL,EAAI/E,OAAS,EAAI,KAAM,MAAMJ,KAAI,SAAUyF,GAAK,OAAOX,SAASK,EAAI/E,OAAS,EAAIqF,EAAIA,EAAIA,EAAG,OAAQC,KAAK,KAAO,IAKrLC,GAFJL,EAAMA,EAAInH,QAAQ,UAAW,IAAIyH,MAAM,MAE3B,GAAK,IAAOC,EAAIP,EAAI,GAAK,IAAOQ,EAAIR,EAAI,GAAK,IAErDS,EAAMvE,KAAKuE,IAAIJ,EAAGE,EAAGC,GACrBrE,EAAMD,KAAKC,IAAIkE,EAAGE,EAAGC,GACfL,GAAKM,EAAMtE,GAAO,EAE5B,GAAIsE,IAAQtE,EACR2D,EAAIC,EAAI,MACL,CACH,IAAIpE,EAAI8E,EAAMtE,EACd4D,EAAKI,EAAI,GAAMxE,GAAK,EAAM8E,EAAMtE,GAAOR,GAAK8E,EAAMtE,GAE9CsE,IAAQJ,GAAKE,GAAKC,EAClBV,EAAI,QAAUS,EAAIC,GAAK7E,EAChB8E,IAAQJ,GAAKE,EAAIC,EACxBV,EAAI,QAAUS,EAAIC,GAAK7E,EAAI,OACpB8E,IAAQF,EACfT,EAAI,QAAUU,EAAIH,GAAK1E,EAAI,OACpB8E,IAAQD,IACfV,EAAI,QAAUO,EAAIE,GAAK5E,EAAI,QAInCmE,EAAIA,EAAI,OAAS,IAAQ,GAGzBA,GAAK,KACG,MAAOA,GAAK,KAGpB,GAFAA,GAAK,IAEK,IAANC,EACAM,EAAIE,EAAIC,EAAIL,MACT,CACH,IAAIO,EAAU,SAAiBC,EAAGC,EAAGC,GAGjC,OAFIA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAI,EAAUF,EAAc,GAATC,EAAID,GAASE,EACpCA,EAAI,GAAcD,EAClBC,EAAI,EAAI,EAAUF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAC3CF,GAGPC,EAAIT,EAAI,GAAMA,GAAK,EAAIJ,GAAKI,EAAIJ,EAAII,EAAIJ,EACxCY,EAAI,EAAIR,EAAIS,EAEhBP,EAAIK,EAAQC,EAAGC,EAAGd,EAAI,EAAI,GAC1BS,EAAIG,EAAQC,EAAGC,EAAGd,GAClBU,EAAIE,EAAQC,EAAGC,EAAGd,EAAI,EAAI,GAS9B,OANAO,EAAInE,KAAK4E,MAAU,IAAJT,GACfE,EAAIrE,KAAK4E,MAAU,IAAJP,GACfC,EAAItE,KAAK4E,MAAU,IAAJN,GAIR,KAAO,UADdR,EAAMQ,EAAKD,GAAK,EAAMF,GAAK,KACI5F,SAAS,IAAIsG,UAAU,GA/E3BC,CAAiBrB,GAAMsB,cAClD,OACI,kBAAC,IAAMvE,SAAP,KACA,kBAACwE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAO1I,EAAO,IAAMiH,EAAK0B,OAAO,GAAIC,UAAW,UAAY1B,EAAmByB,OAAO,KACjG,kBAACE,EAAA,EAAD,KACI,kBAAC1H,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAII,MAAO,CAACkD,gBAAiBoC,KAC5C,kBAAC9F,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGI,MAAO,CAACkD,gBAAiBqC,EAAoB7G,MAAO4G,IAAQC,EAAmByB,OAAO,SCe7GG,EAzBA,WACX,OACI,kBAAC,IAAM9E,SAAP,KACI,kBAAC,EAAD,CAAOhE,KAAK,OAAOiH,KAAK,YACxB,kBAAC,EAAD,CAAOjH,KAAK,QAAQiH,KAAK,YACzB,kBAAC,EAAD,CAAOjH,KAAK,UAAUiH,KAAK,YAC3B,kBAAC,EAAD,CAAOjH,KAAK,OAAOiH,KAAK,YACxB,kBAAC,EAAD,CAAOjH,KAAK,OAAOiH,KAAK,YACxB,kBAAC,EAAD,CAAOjH,KAAK,YAAYiH,KAAK,YAC7B,kBAAC,EAAD,CAAOjH,KAAK,YAAYiH,KAAK,YAC7B,kBAAC,EAAD,CAAOjH,KAAK,MAAMiH,KAAK,YACvB,kBAAC,EAAD,CAAOjH,KAAK,SAASiH,KAAK,YAC1B,kBAAC,EAAD,CAAOjH,KAAK,OAAOiH,KAAK,YACxB,yBAAKtF,MAAO,CAAE0C,UAAW,SAAWxE,QAAS,OAAQkJ,cAAe,WAChE,uBAAG5E,KAAK,2CAA2C4B,OAAO,SAASiD,IAAI,uBAAvE,4CACA,uBAAG7E,KAAK,wBAAR,wBACA,uBAAGA,KAAK,yCAAR,yCACA,uBAAGA,KAAK,yCAAR,yCACA,uBAAGA,KAAK,mDAAR,iB,yVCDV8E,GAAa,CACfC,IAAKC,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACxDC,MAAOH,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACzDE,MAAOJ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QACzDG,OAAQL,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QAClEI,YAAaN,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAkBD,EAAlB,CAAyBC,IAAKA,QACtEK,KAAMP,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAUD,EAAV,CAAiBC,IAAKA,QACvDM,OAAQR,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAaD,EAAb,CAAoBC,IAAKA,QAC5DO,OAAQT,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAgBD,EAAhB,CAAuBC,IAAKA,QAC/DQ,UAAWV,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAeD,EAAf,CAAsBC,IAAKA,QACjES,SAAUX,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAcD,EAAd,CAAqBC,IAAKA,QAC/DU,SAAUZ,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAkBD,EAAlB,CAAyBC,IAAKA,QACnEW,aAAcb,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAiBD,EAAjB,CAAwBC,IAAKA,QACtEY,YAAad,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAWD,EAAX,CAAkBC,IAAKA,QAC/Da,OAAQf,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QAC3Dc,UAAWhB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,IAAD,iBAAmBD,EAAnB,CAA0BC,IAAKA,QACrEe,gBAAiBjB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAYD,EAAZ,CAAmBC,IAAKA,QACpEgB,WAAYlB,sBAAW,SAACC,EAAOC,GAAR,OAAgB,kBAAC,KAAD,iBAAgBD,EAAhB,CAAuBC,IAAKA,SA2DxDiB,GAxDE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE7BF,IAAWA,EAAY,IAC5B,IASMG,EAAOH,EAAUvI,KAAI,SAAA2F,GAEvB,IAAMgD,EAAWnH,KAAKoH,IAAI,IAAIC,KAAS,IAAIA,KAAKlD,EAAEmD,YAC5CC,GAAOJ,EAAQ,SAAgCK,QAAQ,GAEvDC,GAAYN,EAAQ,UAAgCK,QAAQ,GAC5DE,EAAaC,KAAOxD,EAAEmD,WAAWM,OAAO,mBACxCC,EAAeF,KAAOxD,EAAEmD,WAAWQ,IAAI,GAAI,SAASF,OAAO,eAEjE,MADiB,CAAEpL,KAAM2H,EAAE3H,KAAM8K,UAAWnD,EAAEmD,UAAWC,MAAKE,WAAUC,aAAYG,mBAKlFE,EAAQJ,OAASC,OAAO,mBAE9B,OACI,kBAAC,IAAD,CAAeI,MAAOvC,GAClBP,MAAK,gCAA2ByC,OAASC,OAAO,eAA3C,cAA+DG,GACpEE,QA3BQ,CACZ,CAAE/C,MAAO,OAAQgD,MAAO,QACxB,CAAEhD,MAAO,aAAcgD,MAAO,YAAa/F,KAAM,QACjD,CAAE+C,MAAO,eAAgBgD,MAAO,aAAc/F,KAAM,QACpD,CAAE+C,MAAO,MAAOgD,MAAO,MAAO/F,KAAM,WACpC,CAAE+C,MAAO,YAAagD,MAAO,WAAY/F,KAAM,WAC/C,CAAE+C,MAAO,aAAcgD,MAAO,eAAgB/F,KAAM,SAsBhD+E,KAAMA,EACNiB,QAAS,CACL,CACIC,KAAM3C,GAAWC,IACjB2C,QAAS,YACTC,cAAc,EACd9F,QAAS,SAACF,GACN0E,MAGR,CACIoB,KAAM3C,GAAWO,OACjBqC,QAAS,eACT7F,QAAS,SAACF,EAAOiG,GACbtB,EAASsB,MAIrBC,QAAS,CACLC,oBAAqB,M,wCClF/BC,I,OAAYC,cAAW,SAACC,GAAD,MAAY,CACrChL,UAAW,CACPwD,MAAO,MACPyH,OAAQ,YACRzK,QAAS,MACT/B,QAAS,OACTC,eAAgB,gBAChBwM,WAAY,eAuELC,GAnEG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEXC,EAAUP,KAChB,OACI,kBAAC,IAAMlI,SAAP,KACI,kBAAC,KAAD,CACI0I,cAAe,CAAE1M,KAAM,GAAI8K,UAAW,IACtC6B,SAAU,SAACtJ,GACP,IAAIuJ,EAAS,GAWb,OATKvJ,EAAOrD,OACR4M,EAAO5M,KAAO,oBACdqD,EAAOrD,MAAQqD,EAAOrD,KAAKoC,OAAS,IACpCwK,EAAO5M,KAAO,8CAEbqD,EAAOyH,YACR8B,EAAO9B,UAAY,yBAGhB8B,GAEXC,SAAU,SAACxJ,EAAD,GAAgC,IAArByJ,EAAoB,EAApBA,cACjBN,EAAOnJ,GACPyJ,GAAc,MAGjB,gBACGzJ,EADH,EACGA,OAGA0J,GAJH,EAEGH,OAFH,EAGGI,QAHH,EAIGD,cACAE,EALH,EAKGA,WACAC,EANH,EAMGA,aACAC,EAPH,EAOGA,aAPH,OAUO,kBAAC3L,EAAA,EAAD,CAAOC,UAAW,GACd,0BAAMoL,SAAUK,EAAcxH,UAAW+G,EAAQrL,WAC7C,kBAACgM,GAAA,EAAD,CAAWpN,KAAK,OAAOqN,MAAM,OAAOxH,SAAUkH,EAC1CO,OAAQL,EACRrH,MAAOvC,EAAOrD,OAClB,kBAAC,KAAD,CAAcA,KAAK,SACnB,kBAACoN,GAAA,EAAD,CACIC,MAAM,WACNrN,KAAK,YACL2F,KAAK,OACLE,SAAUkH,EACVO,OAAQL,EACRrH,MAAOvC,EAAOyH,UACdyC,gBAAiB,CACbC,QAAQ,KAGhB,kBAAC,KAAD,CAAcxN,KAAK,cACnB,kBAACyN,GAAA,EAAD,CAAQ9H,KAAK,SAAS+H,SAAUP,EAAclM,QAAQ,YAAYZ,MAAM,WAAxE,oBCrChC,SAASsN,GAAiBpD,GAClBA,GAAaA,EAAUnI,OAAS,EAChCkE,aAAaM,QAAQ,YAAaJ,KAAKK,UAAU0D,IAEjDjE,aAAaM,QAAQ,YAAa,MAgB1C,IAAMgH,GAAc,CAChB,CAAE5N,KAAM,OAAQ8K,UAAW,eAC3B,CAAE9K,KAAM,QAAS8K,UAAW,eAC5B,CAAE9K,KAAM,OAAQ8K,UAAW,eAC3B,CAAE9K,KAAM,QAAS8K,UAAW,eAC5B,CAAE9K,KAAM,QAAS8K,UAAW,eAC5B,CAAE9K,KAAM,SAAU8K,UAAW,gBAGlB+C,GA3DE,WAAO,IAAD,EAEKtI,mBAAS,GAFd,mBAEZuI,EAFY,KAENC,EAFM,KAGbC,EAmCV,WACI,IACItD,EADEuD,EAAgB3H,aAAaC,QAAQ,aAEvC0H,IACAvD,EAAOlE,KAAKC,MAAMwH,IAEjBvD,GAAwB,IAAhBA,EAAKtI,SACdsI,EAAOkD,IAEX,OAAOlD,EA5CkBwD,GAHN,EAIe3I,mBAASyI,GAJxB,mBAIZzD,EAJY,KAID4D,EAJC,KAoBnB,OACI,kBAAC,IAAMnK,SAAP,KAEiB,IAAT8J,EAAa,kBAAC,GAAD,CAAUvD,UAAWA,EAAWC,MAXrC,WAChBuD,EAAQ,IAUiEtD,SARtD,SAACsB,GACpB,IAAMqC,EAAY7D,EAAU8D,QAAO,SAAA1G,GAAC,OAAIA,EAAE3H,OAAS+L,EAAQ/L,QAC3DmO,EAAaC,GACbT,GAAiBS,MAKuF,kBAAC,GAAD,CAAW5B,OAjBlG,SAAC8B,GAElBH,EAAa,GAAD,mBAAK5D,GAAL,CAAgB,CAAEvK,KAAMsO,EAAUtO,KAAM8K,UAAWK,KAAOmD,EAAUxD,WAAWM,OAAO,mBAClGuC,GAAiBpD,GACjBwD,EAAQ,QCKDQ,GAbF,WACT,OACI,kBAAC,IAAMvK,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOwK,OAAK,EAACC,KAAK,IAAIC,UAAW,OACjC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,cAAcC,UAAWzI,IAC3C,kBAAC,IAAD,CAAOuI,OAAK,EAACC,KAAK,cAAcC,UAAW3K,IAC3C,kBAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,UAAUC,UAAW5F,IACvC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,YAAYC,UAAWb,OCDtCc,OATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1e0c65f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { styled } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Toolbar, Typography } from '@material-ui/core';\n\nconst ToolBarFlex = styled(Toolbar)({\n    display: 'flex',\n    justifyContent: 'space-around'\n});\n\nconst Header = () => {\n    return (\n        <AppBar position='static' color=\"transparent\">\n            <ToolBarFlex>\n                <Link to=\"/\"><Typography>\n                    Home\n                </Typography></Link>\n                <Lnk name=\"Binary Tree\"></Lnk>\n                <Lnk name=\"Algorithms\"></Lnk>\n                <Lnk name=\"Taxes\"></Lnk>\n                <Lnk name=\"Hijri Age\"></Lnk>\n                <Lnk name=\"Colors\"></Lnk>\n            </ToolBarFlex>\n        </AppBar>\n    )\n}\n\nconst Lnk = ({ name }) => {\n    return <Link to={'/' + name.toLowerCase().replace(/ /g, '')}>\n        <Typography color='primary'>{name}</Typography>\n    </Link>\n}\n\nexport default Header;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst Algorithm = ({ name, problem, algorithm, method, testCases }) => {\n\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography color=\"textPrimary\" variant=\"h5\">{name}</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} name=\"Problem\">\n                        <Paper elevation={3} rounded={true} style={{ padding: '15px' }}>\n                            <Typography color=\"primary\" variant=\"h6\">Problem</Typography>\n                            <Typography color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {problem}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} name=\"Algorithm\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Algorithm</Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {algorithm}\n                            </Typography>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12} name=\"Method\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Method</Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ whiteSpace: 'pre-line' }}>\n                                {method.toString()}\n\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} name=\"testcases\">\n                        <Paper elevantion={3} style={{ padding: '15px' }}>\n                            <Typography variant=\"h6\">Test Cases</Typography>\n                            {\n                                testCases.map(a => (\n                                    <div>\n                                        {a.toString()}==> { method(a).toString()}\n                                    </div>\n                                ))\n                            }\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    )\n};\n\nexport default Algorithm;","\nconst problem = `Input is an array of Integers which denotes the stock value of company X.\n\nEx : [1,5,6,7,34,10]\n\nIn this case :\n1 is the stock value of company X on Day 0.\n5 is the stock value of company X on Day 1.\n...\n10 is the stock value of a comany X on Day 5.\n\nYou need to find the day where I can buy the stock and day where I can sell the stock to get the max profit :\n\nIn the above case, If I buy the stock at Day 0 (i.e when the value is 1) and sell on Day 4 (when the value is 34). I get the max profit. Profit = 34-1 = 33. So, the output for the above example should be [0,4] (i.e [buy-day, sell-day])\n\nIf there is a test case in which any profit is not possible, Print [0,0] (i.e: you're buying and selling the stock on the same day)\n\nTest Cases :\n[200, 1,5,6,7,34,10]\n[1,5,6,7,34,10,300]\n[10,1,5,6,7,34,10,20]\n[2,200,1,0,10]\n[7,10]\n[1] //Output: [0,0] You buy and sell on the same day because there's only one number.\n\nIf an emty array or null is passed as an input return [-1,-1].`;\n\nconst algorithm = `// loop1 from 0 to end with BuyIndex\n// loop2 from index to end sellIndex\n// declare MaxProfit, BuyDay, SellDay\n// compute profit if greater than MaxProfit, Replace BuyDay,SellDay and overriteMaxProfit`;\n\nfunction method(prices) {\n    if (!prices || prices.length === 0) {\n        return [-1, -1];\n    }\n\n    if (prices.length === 1) {\n        return [0, 0];\n    }\n\n    let maxProfit = 0;\n    let buyDay = 0;\n    let sellDay = 0;\n\n    for (let i = 0; i < prices.length; i++) {\n        for (let j = i + 1; j < prices.length; j++) {\n            const profit = prices[j] - prices[i];\n            if (profit > maxProfit) {\n                maxProfit = profit;\n                buyDay = i;\n                sellDay = j\n            }\n        }\n    }\n\n    return [buyDay, sellDay];\n\n};\n\nconst testCases = [\n    [1, 5, 6, 7, 34, 10],\n    [200, 1, 5, 6, 7, 34, 10],\n    [1, 5, 6, 7, 34, 10, 300],\n    [10, 1, 5, 6, 7, 34, 10, 20],\n    [2, 200, 1, 0, 10],\n    [7, 10],\n    [1]\n\n];\nconst bestTrade = {\n    name: 'Best Trade',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default bestTrade;","\nfunction method(input) {\n    const completeDeck = new Map();\n    const base = ['A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'];\n    base.forEach(d => completeDeck.set(d + 'H', 0));\n    base.forEach(d => completeDeck.set(d + 'S', 0));\n    base.forEach(d => completeDeck.set(d + 'D', 0));\n    base.forEach(d => completeDeck.set(d + 'C', 0));\n\n\n    input.forEach(x => {\n        completeDeck.set(x, completeDeck.get(x) + 1);\n    });\n\n    const values = Array.from(completeDeck.values());\n    return Math.min(...values);\n}\n\n\n\nconst testCases = [\n    [\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", \"TH\"],\n    [\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\"],\n    [\"TD\", \"TC\", \"6H\", \"5H\", \"KC\", \"JH\", \"QC\", \"4S\", \"2S\", \"8H\", \"JD\", \"2H\", \"AC\", \"7D\", \"6C\", \"5D\", \"AD\", \"TS\", \"4D\", \"KH\", \"3H\", \"9H\", \"3S\", \"2D\", \"5S\", \"6S\", \"AH\", \"JS\", \"6D\", \"9S\", \"4C\", \"7C\", \"8S\", \"AS\", \"KD\", \"7S\", \"4H\", \"KS\", \"7H\", \"9D\", \"8D\", \"3D\", \"5C\", \"9C\", \"QH\", \"JC\", \"8C\", \"TH\", \"QS\", \"3C\", \"QD\", \"2C\"],\n    [\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AH\"],\n    [\"QC\", \"6D\", \"KD\", \"QS\", \"7S\", \"5C\", \"QH\", \"3H\", \"AD\", \"9C\", \"7H\", \"QD\", \"QH\", \"2S\", \"AH\", \"KS\", \"5D\", \"QC\", \"AS\", \"2D\", \"6C\", \"8C\", \"7D\", \"8H\", \"9S\", \"4D\", \"6H\", \"JC\", \"3S\", \"4C\", \"3C\", \"7S\", \"KD\", \"4H\", \"5C\", \"7C\", \"AS\", \"3D\", \"7D\", \"2H\", \"8S\", \"2H\", \"8D\", \"9S\", \"3C\", \"5H\", \"KS\", \"8D\", \"9H\", \"TH\", \"2C\", \"JH\", \"6D\", \"KC\", \"TS\", \"6S\", \"TD\", \"4S\", \"8S\", \"5S\", \"8H\", \"TD\", \"9D\", \"4H\", \"6C\", \"7C\", \"AC\", \"JC\", \"JD\", \"TS\", \"KH\", \"2C\", \"QD\", \"JS\", \"QS\", \"KH\", \"8C\", \"3H\", \"2D\", \"2S\", \"3S\", \"5H\", \"4S\", \"9C\", \"4D\", \"6H\", \"JS\", \"TH\", \"9H\", \"TC\", \"7H\", \"JH\", \"TC\", \"6S\", \"AD\", \"AC\", \"JD\", \"4C\", \"5D\", \"9D\", \"KC\", \"3D\"],\n    [\"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\"]\n];\n\n\nconst problem = `You’re given an X decks of N playing cards with few cards missing. The playing cards can be in the form of an array and is shuffled in any order:\n\nEg: [\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", “TH\"]\n\nwhere: ‘H’,’S’,’D’,’C’ is Hearts, Spades, Diamonds and Clubs\n\nand ‘A’,’2’,’3’,’4’,’5’,’6’,’7’,’8’,’9’,’T’,’J’,’Q’,’K’ is Ace, 2,3…. Ten, Jack, Queen, King respectively.\n\nYou need to find out how many complete decks can be made from the cards you’ve given in the input.\n\nTest Cases:\n\ndecksOfCards([\"9C\", \"KS\", \"AC\", \"AH\", \"8D\", \"4C\", \"KD\", \"JC\", \"7D\", \"9D\", \"2H\", \"7C\", \"3C\", \"7S\", \"5C\", \"6H\", \"TH\"]) // Output: 0 (No complete decks in this array)\n\ndecksOfCards([\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\"]) // Output: 2 (2 complete decks in this array)\n\ndecksOfCards([\"TD\", \"TC\", \"6H\", \"5H\", \"KC\", \"JH\", \"QC\", \"4S\", \"2S\", \"8H\", \"JD\", \"2H\", \"AC\", \"7D\", \"6C\", \"5D\", \"AD\", \"TS\", \"4D\", \"KH\", \"3H\", \"9H\", \"3S\", \"2D\", \"5S\", \"6S\", \"AH\", \"JS\", \"6D\", \"9S\", \"4C\", \"7C\", \"8S\", \"AS\", \"KD\", \"7S\", \"4H\", \"KS\", \"7H\", \"9D\", \"8D\", \"3D\", \"5C\", \"9C\", \"QH\", \"JC\", \"8C\", \"TH\", \"QS\", \"3C\", \"QD\", \"2C\"]) // Output: 1\n\ndecksOfCards([\"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"2S\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AH\"]) // Output: 2\n\ndecksOfCards([\"QC\", \"6D\", \"KD\", \"QS\", \"7S\", \"5C\", \"QH\", \"3H\", \"AD\", \"9C\", \"7H\", \"QD\", \"QH\", \"2S\", \"AH\", \"KS\", \"5D\", \"QC\", \"AS\", \"2D\", \"6C\", \"8C\", \"7D\", \"8H\", \"9S\", \"4D\", \"6H\", \"JC\", \"3S\", \"4C\", \"3C\", \"7S\", \"KD\", \"4H\", \"5C\", \"7C\", \"AS\", \"3D\", \"7D\", \"2H\", \"8S\", \"2H\", \"8D\", \"9S\", \"3C\", \"5H\", \"KS\", \"8D\", \"9H\", \"TH\", \"2C\", \"JH\", \"6D\", \"KC\", \"TS\", \"6S\", \"TD\", \"4S\", \"8S\", \"5S\", \"8H\", \"TD\", \"9D\", \"4H\", \"6C\", \"7C\", \"AC\", \"JC\", \"JD\", \"TS\", \"KH\", \"2C\", \"QD\", \"JS\", \"QS\", \"KH\", \"8C\", \"3H\", \"2D\", \"2S\", \"3S\", \"5H\", \"4S\", \"9C\", \"4D\", \"6H\", \"JS\", \"TH\", \"9H\", \"TC\", \"7H\", \"JH\", \"TC\", \"6S\", \"AD\", \"AC\", \"JD\", \"4C\", \"5D\", \"9D\", \"KC\", \"3D\"]) // Output: 1\n\ndecksOfCards([\"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\", \"AC\", \"2C\", \"2D\", \"2H\", \"3S\", \"3C\", \"3D\", \"3H\", \"4S\", \"4C\", \"4D\", \"4H\", \"5S\", \"5C\", \"5D\", \"5H\", \"6S\", \"6C\", \"6D\", \"6H\", \"7S\", \"7C\", \"7D\", \"7H\", \"8S\", \"8C\", \"8D\", \"8H\", \"9S\", \"9C\", \"9D\", \"9H\", \"TS\", \"TC\", \"TD\", \"TH\", \"JS\", \"JC\", \"JD\", \"JH\", \"QS\", \"QC\", \"QD\", \"QH\", \"KS\", \"KC\", \"KD\", \"KH\", \"AS\", \"AC\", \"AD\", \"AH\"]) // Output: 0`\n\nconst algorithm = ``;\n\n\nconst decks = {\n    name: 'Decks',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default decks;\n","\nfunction method(input, result) {\n    input.forEach(x => {\n        if (Array.isArray(x)) {\n            method(x, result);\n        } else {\n            if (!result){\n                result = [];\n            }\n            result.push(x);\n        }\n    });\n    return result;\n}\n\nconst problem = `Flatten this array out : [1,2,[3,4,[5,6],7,[8,9]]]\nOutput should be [1,2,3,4,5,6,7,8,9]\n\nYou can ONLY use arr.push(), arr.concat() as library / array functions. Please don't use any other library or array functions.`\n\nconst algorithm = ``;\n\nconst testCases = [[1,2,[3,4,[5,6],7,[8,9]]]];\nconst flatten = {\n    name: 'Flatten Array',\n    problem,\n    algorithm,\n    method,\n    testCases\n};\n\nexport default flatten;","import React, { useState, useEffect } from 'react';\nimport Node from './components/Node/Node';\nimport { cloneDeep } from 'lodash';\nimport Editor from './components/Editor/Editor';\n\nlet _rootNode;\nconst BinaryTree = () => {\n\n    let [rootNode, setRootNode] = useState({ key: null, left: null, right: null });\n    useEffect(() => {\n        const savedRootNode = localStorage.getItem('rootNode');\n        if (savedRootNode) {\n            setRootNode(JSON.parse(savedRootNode));\n        }\n    }, []);\n\n    const addNode = (node, nodeValue) => {\n\n        // duplicate nodevalue not allowd\n        if (node.key === nodeValue) return;\n\n        if (node.key === null) {\n            node.key = nodeValue;\n            node.left = null;\n            node.right = null;\n            localStorage.setItem('rootNode', JSON.stringify(_rootNode));\n            return setRootNode(_rootNode);\n        }\n        // insert to the right\n        if (parseInt(nodeValue) > parseInt(node.key)) {\n            if (node.right) {\n                // continue searching\n                addNode(node.right, nodeValue);\n            } else {\n                // right node is terminus: initialize right node, next iteration is the last one.\n                node.right = { key: null };\n                addNode(node.right, nodeValue);\n            }\n        } else {\n            if (node.left) {\n                addNode(node.left, nodeValue);\n            } else {\n                node.left = { key: null };\n                addNode(node.left, nodeValue);\n            }\n        }\n    }\n\n    const addNodeHandler = (keyValue) => {\n        _rootNode = cloneDeep(rootNode);\n        addNode(_rootNode, keyValue);\n    }\n\n    return (\n        <React.Fragment>\n            <Editor addNode={addNodeHandler} />\n            <Node node={rootNode} />\n        </React.Fragment>\n    )\n}\n\nexport default BinaryTree;","import React from 'react';\nimport Algorithm from './components/Algorithm';\nimport bestTrade from './solutions/bestTrade';\nimport decks from './solutions/decks';\nimport flatten from './solutions/flatten';\nimport Container from '@material-ui/core/Container';\n\nconst Algorithms = () => {\n\n    return (\n        <React.Fragment>\n            <Container maxWidth='90%'>\n                <a href=\"https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/\">https://www.programcreek.com/2012/11/top-10-algorithms-for-coding-interview/</a>\n                <Algorithm  {...bestTrade} />\n                <Algorithm  {...decks} />\n                <Algorithm  {...flatten} />\n            </Container>\n        </React.Fragment>\n    )\n\n}\n\nexport default Algorithms;","import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nconst MainContainer = styled(Container)({\n    textAlign: 'center',\n    borderRadius: '25%',\n});\n\n\n\nconst KeyContainer = styled(Container)({\n    fontSize: '1em',\n}\n);\n\nconst ChildrenContainer = styled(Container)({\n    display: 'flex',\n    justifyItems: 'center',\n    justifyContent: 'center',\n});\n\nconst LeftNode = styled(Container)({\n    width: '50%',\n    backgroundColor: 'yellow',\n});\n\nconst RightNode = styled(Container)({\n    width: '50%',\n    backgroundColor: 'magenta',\n}\n);\n\n\nconst Node = ({ node }) => {\n    if (!node || !node.key) {\n        return null;\n    }\n\n    const nodeKey = <MainContainer >\n        <KeyContainer>{node.key}</KeyContainer>\n        <ChildrenContainer >\n            <LeftNode >\n                {\n                    node.left && <Node node={node.left} />\n                }\n            </LeftNode>\n            <RightNode >\n                {\n                    node.right && <Node node={node.right} />\n                }\n            </RightNode>\n        </ChildrenContainer>\n    </MainContainer>;\n\n\n    return (\n        <React.Fragment>\n            {nodeKey}\n        </React.Fragment>\n    )\n\n}\n\n\nexport default Node;","import React, { useState } from 'react';\nimport './editor.scss';\n\nconst Editor = ({ addNode }) => {\n\n    const [inputValue, setInputValue] = useState(0);\n\n    const pushNode = () => {\n        // Math.round(Math.random() * 100)\n        addNode(inputValue);\n    }\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"editor-container\">\n                <label>\n                    Value:\n                <input type=\"number\" value={inputValue} onChange={handleInputChange}></input>\n                </label>\n                <button type=\"button\" onClick={pushNode}>Add</button>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Editor;","import React from 'react'\nimport { Card, CardHeader, CardContent } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid';\n\nconst Color = ({ name, code }) => {\n    const complementaryColor = hexComplimentary(code).toUpperCase();\n    return (\n        <React.Fragment>\n        <Card>\n            <CardHeader title={name + ' ' + code.substr(1)} subheader={'comp = ' + complementaryColor.substr(1)} />\n            <CardContent>\n                <Grid container spacing={3}>\n                    <Grid item xs={10} style={{backgroundColor: code}}></Grid>\n                    <Grid item xs={2} style={{backgroundColor: complementaryColor, color: code}}>{complementaryColor.substr(1)}</Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n        </React.Fragment>\n    )\n}\n\nfunction hexComplimentary(hex) {\n\n    var rgb = 'rgb(' + (hex = hex.replace('#', '')).match(new RegExp('(.{' + hex.length / 3 + '})', 'g')).map(function (l) { return parseInt(hex.length % 2 ? l + l : l, 16); }).join(',') + ')';\n\n    // Get array of RGB values\n    rgb = rgb.replace(/[^\\d,]/g, '').split(',');\n\n    var r = rgb[0] / 255.0, g = rgb[1] / 255.0, b = rgb[2] / 255.0;\n\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h, s, l = (max + min) / 2.0;\n\n    if (max === min) {\n        h = s = 0;  //achromatic\n    } else {\n        var d = max - min;\n        s = (l > 0.5 ? d / (2.0 - max - min) : d / (max + min));\n\n        if (max === r && g >= b) {\n            h = 1.0472 * (g - b) / d;\n        } else if (max === r && g < b) {\n            h = 1.0472 * (g - b) / d + 6.2832;\n        } else if (max === g) {\n            h = 1.0472 * (b - r) / d + 2.0944;\n        } else if (max === b) {\n            h = 1.0472 * (r - g) / d + 4.1888;\n        }\n    }\n\n    h = h / 6.2832 * 360.0 + 0;\n\n    // Shift hue to opposite side of wheel and convert to [0-1] value\n    h += 180;\n    if (h > 360) { h -= 360; }\n    h /= 360;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        var hue2rgb = function hue2rgb(p, q, t) {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    r = Math.round(r * 255);\n    g = Math.round(g * 255);\n    b = Math.round(b * 255);\n\n    // Convert r b and g values to hex\n    rgb = b | (g << 8) | (r << 16);\n    return \"#\" + (0x1000000 | rgb).toString(16).substring(1);\n}\n\n\nexport default Color;","import React from 'react'\nimport Color from './components/Color'\n\nconst Colors = () => {\n    return (\n        <React.Fragment>\n            <Color name='Lime' code='#05FF01'></Color>\n            <Color name='Olive' code='#818000'></Color>\n            <Color name='Skyblue' code='#86CEEB'></Color>\n            <Color name='Navy' code='#000080'></Color>\n            <Color name='Snow' code='#FFFAFA'></Color>\n            <Color name='Chocolate' code='#D2691F'></Color>\n            <Color name='Firebrick' code='#B22122'></Color>\n            <Color name='Tan' code='#D2B48C'></Color>\n            <Color name='Silver' code='#C0C0C0'></Color>\n            <Color name='Teal' code='#028080'></Color>\n            <div style={{ textAlign: 'center' , display: 'flex', flexDirection: 'column'}}>\n                <a href=\"https://visme.co/blog/color-combinations\" target=\"_blank\" rel=\"noopener noreferrer\" >https://visme.co/blog/color-combinations</a>\n                <a href=\"https://colordrop.io\">https://colordrop.io</a>\n                <a href=\"https://web.njit.edu/~walsh/index.php\">https://web.njit.edu/~walsh/index.php</a>\n                <a href=\"http://hajonsoft.com/html/colors.html\">http://hajonsoft.com/html/colors.html</a>\n                <a href=\"https://www.color-blindness.com/color-name-hue/\">Color Name</a>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default Colors;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport moment from 'moment-hijri';\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst AgeTable = ({ birthdays, onAdd, onDelete }) => {\n\n    if (!birthdays) birthdays = [];\n    const columns = [\n        { title: 'Name', field: 'name' },\n        { title: 'Birth date', field: 'birthdate', type: 'date' },\n        { title: 'Hijri Birth ', field: 'hbirthdate', type: 'date' },\n        { title: 'Age', field: 'age', type: 'numeric' },\n        { title: 'Hijri Age', field: 'hijriAge', type: 'numeric' },\n        { title: 'age 15h on', field: 'hbirthdate15', type: 'date' },\n    ];\n\n    const data = birthdays.map(r => {\n\n        const diffTime = Math.abs(new Date() - new Date(r.birthdate));\n        const age = (diffTime / (1000 * 60 * 60 * 24 * 365)).toFixed(2);\n\n        const hijriAge = (diffTime / (1000 * 60 * 60 * 24 * 354)).toFixed(2);\n        const hbirthdate = moment(r.birthdate).format('iDD, iMMM iYYYY');\n        const hbirthdate15 = moment(r.birthdate).add(15, 'iYear').format('DD MMM YYYY');\n        const tableRow = { name: r.name, birthdate: r.birthdate, age, hijriAge, hbirthdate, hbirthdate15 };\n        return tableRow;\n    });\n\n\n    const today = moment().format('iDD, iMMM iYYYY');\n\n    return (\n        <MaterialTable icons={tableIcons}\n            title={`How old are you today ${moment().format('DD MMM YYYY')} / ${today}`}\n            columns={columns}\n            data={data}\n            actions={[\n                {\n                    icon: tableIcons.Add,\n                    tooltip: 'Add Birth',\n                    isFreeAction: true,\n                    onClick: (event) => {\n                        onAdd();\n                    }\n                },\n                {\n                    icon: tableIcons.Delete,\n                    tooltip: 'Delete Birth',\n                    onClick: (event, rowData) => {\n                        onDelete(rowData);\n                    }\n                }\n            ]}\n            options={{\n                actionsColumnIndex: -1\n            }}\n        />\n    )\n}\n\nexport default AgeTable;","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        width: '80%',\n        margin: '25px auto',\n        padding: '1em',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n}));\n\nconst AgeDetail = ({ onSave }) => {\n\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{ name: '', birthdate: '' }}\n                validate={(values) => {\n                    let errors = {};\n\n                    if (!values.name)\n                        errors.name = 'Name is required';\n                    if (values.name && values.name.length < 2)\n                        errors.name = 'Name should be more than 2 characters long';\n\n                    if (!values.birthdate)\n                        errors.birthdate = 'Birthdate is required';\n\n\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    onSave(values);\n                    setSubmitting(false);\n                }}\n            >\n                {({\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    isSubmitting,\n                    /* and other goodies */\n                }) => (\n                        <Paper elevation={5}>\n                            <form onSubmit={handleSubmit} className={classes.container}>\n                                <TextField name=\"name\" label=\"Name\" onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.name} />\n                                <ErrorMessage name=\"name\" />\n                                <TextField\n                                    label=\"Birthday\"\n                                    name=\"birthdate\"\n                                    type=\"date\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.birthdate}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                                <ErrorMessage name=\"birthdate\" />\n                                <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" color=\"primary\">\n                                    Add Birth\n                                </Button>\n                            </form>\n                        </Paper>\n                    )}\n\n            </Formik>\n\n        </React.Fragment>\n    )\n}\n\nexport default AgeDetail;","import React, { useState } from 'react';\nimport AgeTable from './components/AgeTable';\nimport AgeDetail from './components/AgeDetail';\nimport moment from 'moment-hijri';\n\n\nconst HijriAge = () => {\n\n    const [mode, setMode] = useState(0);\n    const initialBirthdays = getDefaultBirthdays();\n    const [birthdays, setBirthdays] = useState(initialBirthdays);\n\n    const handleOnSave = (newRecord) => {\n\n        setBirthdays([...birthdays, { name: newRecord.name, birthdate: moment(newRecord.birthdate).format('DD MMM YYYY') }]);\n        saveLocalStorage(birthdays);\n        setMode(0);\n    }\n    const handleOnAdd = () => {\n        setMode(1);\n    }\n    const handleOnDelete = (rowData) => {\n        const remaining = birthdays.filter(r => r.name !== rowData.name);\n        setBirthdays(remaining);\n        saveLocalStorage(remaining);\n    }\n    return (\n        <React.Fragment>\n            {\n                mode === 0 ? <AgeTable birthdays={birthdays} onAdd={handleOnAdd} onDelete={handleOnDelete} /> : <AgeDetail onSave={handleOnSave} />\n            }\n\n        </React.Fragment>\n    )\n}\n\nfunction saveLocalStorage(birthdays) {\n    if (birthdays && birthdays.length > 0) {\n        localStorage.setItem('birthdays', JSON.stringify(birthdays));\n    } else {\n        localStorage.setItem('birthdays', null);\n    }\n}\n\nfunction getDefaultBirthdays() {\n    const birthdateItem = localStorage.getItem('birthdays');\n    let data;\n    if (birthdateItem) {\n        data = JSON.parse(birthdateItem);\n    }\n    if (!data || data.length === 0) {\n        data = defaultData;\n    }\n    return data;\n}\n\nconst defaultData = [\n    { name: 'Modi', birthdate: '24 Nov 2003' },\n    { name: 'Minna', birthdate: '09 Sep 2006' },\n    { name: 'Noha', birthdate: '02 Mar 2008' },\n    { name: 'Berry', birthdate: '17 Feb 2017' },\n    { name: 'Hamza', birthdate: '12 Aug 2019' },\n    { name: 'Cherry', birthdate: '12 Aug 2019' },\n];\n\nexport default HijriAge;","import React from 'react';\nimport Header from './components/Header/Header';\nimport  {Route} from 'react-router-dom';\nimport Algorithms from '../algorithms/Algorithms'\nimport BinaryTree from '../binaryTree/BinaryTree'\nimport Colors from '../colors/Colors';\nimport HijriAge from '../hijriAge/HijriAge';\n\nconst Root = ()=> {\n    return (\n        <React.Fragment>\n            <Header />\n            <Route exact path=\"/\" component={null}></Route>\n            <Route exact path=\"/binarytree\" component={BinaryTree}></Route>\n            <Route exact path=\"/algorithms\" component={Algorithms}></Route>\n            <Route exact path=\"/colors\" component={Colors}></Route>\n            <Route exact path=\"/hijriage\" component={HijriAge}></Route>\n        </React.Fragment>\n    )\n}\n\nexport default Root;","import React from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Root from './features/root/Root';\n\n\nfunction App() {\n  return (\n    <Router>\n      <Root></Root>\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}