{"version":3,"sources":["components/Algorithms/BinaryTree/Nodes/Container/NodesContainer.js","components/Root/Header/Header.js","components/Root/SideNav/SideNav.js","components/Algorithms/BinaryTree/Nodes/Node/node.js","components/Algorithms/BinaryTree/editor/editor.js","components/Root/Main/Main.js","App.js","index.js"],"names":["_rootNode","Header","aria-label","className","to","AlgorithmNav","exact","SideNav","path","component","Node","node","key","nodeKey","left","right","Fragment","Editor","addNode","useState","inputValue","setInputValue","type","value","onChange","event","target","onClick","NodesContainer","rootNode","setRootNode","useEffect","savedRootNode","localStorage","getItem","JSON","parse","keyValue","nodeValue","setItem","stringify","parseInt","cloneDeep","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.529d61f3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Node from '../Node/node';\nimport { cloneDeep } from 'lodash';\n\nimport Editor from '../../editor/editor';\n\nlet _rootNode;\nconst NodesContainer = () => {\n\n    let [rootNode, setRootNode] = useState({ key: null, left: null, right: null });\n    useEffect(() => {\n        const savedRootNode = localStorage.getItem('rootNode');\n        if (savedRootNode) {\n            setRootNode(JSON.parse(savedRootNode));\n        }\n    }, []);\n\n    const addNode = (node, nodeValue) => {\n\n        // duplicate nodevalue not allowd\n        if (node.key === nodeValue) return;\n\n        if (node.key === null) {\n            node.key = nodeValue;\n            node.left = null;\n            node.right = null;\n            localStorage.setItem('rootNode', JSON.stringify(_rootNode));\n            return setRootNode(_rootNode);\n        }\n        // insert to the right\n        if (parseInt(nodeValue) > parseInt(node.key)) {\n            if (node.right) {\n                // continue searching\n                addNode(node.right, nodeValue);\n            } else {\n                // right node is terminus: initialize right node, next iteration is the last one.\n                node.right = { key: null };\n                addNode(node.right, nodeValue);\n            }\n        } else {\n            if (node.left) {\n                addNode(node.left, nodeValue);\n            } else {\n                node.left = { key: null };\n                addNode(node.left, nodeValue);\n            }\n        }\n    }\n\n    const addNodeHandler = (keyValue) => {\n        _rootNode = cloneDeep(rootNode);\n        addNode(_rootNode, keyValue);\n    }\n\n    return (\n        <React.Fragment>\n            <Editor addNode={addNodeHandler} />\n            <Node node={rootNode} />\n        </React.Fragment>\n    )\n}\n\nexport default NodesContainer;","import React from 'react';\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\nimport './header.scss';\n\nconst Header = () => {\n\n    return (\n        <Router>\n            <nav aria-label=\"main\" className='main-header-nav'>\n                <ul className=\"main-header-ul-container\">\n                    <li>\n                        <Link to=\"/\"  >Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"algorithm\"  >Algorithms</Link>\n                    </li>\n                    <li>\n                        <Link to=\"birthday\"  >Birthdays</Link>\n                    </li>\n                    <li>\n                        <Link to=\"color\"  >Colors</Link>\n                    </li>\n                </ul>\n            </nav>\n        </Router>\n    )\n\n}\n\nexport default Header;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport './sidenav.scss'\n\nconst SideNav = () => {\n\n    return (\n        <Router>\n            <Route path=\"/algorithm\" component={AlgorithmNav}></Route>\n        </Router>\n    )\n\n}\n\nconst AlgorithmNav = () => {\n    return (\n        <Router>\n            <nav aria-label=\"secondary\" className=\"sidenav-container\">\n                <ul className=\"sidenav-ul\">\n                    <li>\n                        <Link to=\"/algorithm/besttrade\" exact > Best Trade </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/algorithm/deck\" >Decks</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/algorithm/flaten\"  >Flaten</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/algorithm/toys\"  > PopularToys</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/algorithm/words\"  >Linked words</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/algorithm/binarytree\"  >Binary Tree</Link>\n                    </li>\n                </ul>\n            </nav>\n        </Router>\n    )\n}\n\nexport default SideNav;","import React from 'react';\nimport './node.scss'\n\nconst Node = ({ node }) => {\n    if (!node || !node.key) {\n        return null;\n    }\n\n    const nodeKey = <div className=\"node-container\">\n        <div className=\"key-container\">{node.key}</div>\n        <div className=\"children-container\">\n            <div className=\"left-node\">\n                {\n                    node.left && <Node node={node.left} />\n                }\n            </div>\n            <div className=\"right-node\">\n                {\n                    node.right && <Node node={node.right} />\n                }\n            </div>\n        </div>\n    </div>;\n\n\n    return (\n        <React.Fragment>\n            {nodeKey}\n        </React.Fragment>\n    )\n\n}\n\nexport default Node;","import React, { useState } from 'react';\nimport './editor.scss';\n\nconst Editor = ({ addNode }) => {\n\n    const [inputValue, setInputValue] = useState(0);\n\n    const pushNode = () => {\n        // Math.round(Math.random() * 100)\n        addNode(inputValue);\n    }\n\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"editor-container\">\n                <label>\n                    Value:\n                <input type=\"number\" value={inputValue} onChange={handleInputChange}></input>\n                </label>\n                <button type=\"button\" onClick={pushNode}>Add</button>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Editor;","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NodesContainer from '../../Algorithms/BinaryTree/Nodes/Container/NodesContainer'\n\n\nconst Main = () => {\n\n    return (\n        <Router>\n            <Route path=\"/algorithm/binarytree\" component={NodesContainer}></Route>\n        </Router>\n    )\n\n}\n\nexport default Main;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Root/Header/Header';\nimport SideNav from './components/Root/SideNav/SideNav';\nimport Main from './components/Root/Main/Main';\n\n\nfunction App() {\n  return (\n    <main className=\"main-container\">\n      <div className=\"header\">\n        <Header></Header>\n      </div>\n      <div className=\"main-body\">\n        <div className=\"side-nav\">\n          <SideNav></SideNav>\n        </div>\n        <div className=\"main\">\n          <Main></Main>\n        </div>\n\n      </div>\n    </main>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}